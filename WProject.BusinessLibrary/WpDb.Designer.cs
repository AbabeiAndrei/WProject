//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 25-10-15 18:47:59
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects;
using System.Data.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "access_object_access_FK_access_id", "AccessObject", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.AccessObject), "Accesses", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Access), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "access_object_group_FK_group_id", "Group", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.Group), "Accesses", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Access), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "access_object_user_FK_access_granted_by", "User_AccessGrantedBy", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "Accesses_AccessGrantedBy", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Access), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "access_object_user_FK_user_id", "User_UserId", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "Accesses_UserId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Access), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "active_session_user_FK_user_id", "User", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "ActiveSessions", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.ActiveSession), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "app_setting_user_FK_last_updated_by", "User", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "AppSettings", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.AppSetting), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "backlog_category_FK_category_id", "Category", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Category), "Backlogs", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Backlog), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "backlog_dict_item_FK_state_id", "DictItem_StateId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.DictItem), "Backlogs_StateId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Backlog), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "backlog_dict_item_FK_type_id", "DictItem_TypeId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.DictItem), "Backlogs_TypeId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Backlog), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "backlog_user_FK_assigned_to", "User_AssignedTo", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "Backlogs_AssignedTo", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Backlog), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "backlog_user_FK_created_by", "User_CreatedBy", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Backlogs_CreatedBy", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Backlog), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "category_category_FK_parent_id", "Category_ParentId", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.Category), "Categories_ParentId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Category), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "category_spring_FK_spring_id", "Spring", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Spring), "Categories", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Category), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "category_user_FK_created_by", "User_CreatedBy", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Categories_CreatedBy", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Category), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "category_user_FK_owner_id", "User_OwnerId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Categories_OwnerId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Category), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "dict_item__dict_item_FK_parent_id", "DictItem_ParentId", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.DictItem), "DictItems_ParentId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.DictItem), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "file_user_FK_created_by", "User", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "Files", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.File), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "group_user_FK_owner_id", "User", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Groups", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Group), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "log_access_object_FK_access_object_id", "AccessObject", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.AccessObject), "Logs", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Log), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "log_user_FK_user_id", "User", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "Logs", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Log), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "project_user_FK_created_by", "User_CreatedBy", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Projects_CreatedBy", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Project), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "project_user_FK_owner_id", "User_OwnerId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Projects_OwnerId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Project), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "project_setting_project_FK_project_id", "Project", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Project), "ProjectSettings", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.ProjectSetting), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "project_setting_user_FK_last_updated_by", "User", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "ProjectSettings", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.ProjectSetting), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "spring_project_FK_project_id", "Project", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Project), "Springs", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Spring), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "spring_user_FK_created_by", "User_CreatedBy", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Springs_CreatedBy", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Spring), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "spring_user_FK_owner_id", "User_OwnerId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Springs_OwnerId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Spring), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_backlog_FK_backlog_id", "Backlog", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Backlog), "Tasks", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Task), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dict_item_FK_stage_id", "DictItem_StageId", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.DictItem), "Tasks_StageId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Task), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dict_item_FK_state_id", "DictItem_StateId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.DictItem), "Tasks_StateId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Task), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dict_item_FK_type_id", "DictItem_TypeId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.DictItem), "Tasks_TypeId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Task), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_user_FK_assigned_to", "User_AssignedTo", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "Tasks_AssignedTo", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Task), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_user_FK_created_by", "User_CreatedBy", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "Tasks_CreatedBy", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.Task), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_attachement_file_FK_file_id", "File", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.File), "TaskAttachements", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskAttachement), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_attachement_task_FK_task_id", "Task", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Task), "TaskAttachements", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskAttachement), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_attachement_user_FK_attached_by", "User", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "TaskAttachements", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskAttachement), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_block_on_stage_id", "DictItem_BlockOnStageId", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.DictItem), "TaskDependencies_BlockOnStageId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskDependency), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_block_on_state_id", "DictItem_BlockOnStateId", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.DictItem), "TaskDependencies_BlockOnStateId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskDependency), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_dependent_stage_id", "DictItem_DependentStageId", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.DictItem), "TaskDependencies_DependentStageId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskDependency), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_dependent_state_id", "DictItem_DependentStateId", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.DictItem), "TaskDependencies_DependentStateId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskDependency), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dependency_task_FK_task_dependent_id", "Task_TaskDependentId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Task), "TaskDependencies_TaskDependentId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskDependency), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dependency_task_FK_task_id", "Task_TaskId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Task), "TaskDependencies_TaskId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskDependency), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_dependency_users_FK_created_by", "User", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "TaskDependencies", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskDependency), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_history_task_FK_task_id", "Task", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Task), "TaskHistories", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskHistory), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_history_user_FK_updated_by", "User", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "TaskHistories", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskHistory), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_tag_task_FK_task_id", "Task", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Task), "TaskTags", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskTag), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "task_tag_user_FK_created_by", "User", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "TaskTags", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.TaskTag), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_added_by", "User_AddedBy", RelationshipMultiplicity.ZeroOrOne, typeof(WProject.BusinessLibrary.User), "UserInGroups_AddedBy", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.UserInGroup), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_group_id", "Group", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.Group), "UserInGroups", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.UserInGroup), true)]
[assembly: EdmRelationshipAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_user_id", "User_UserId", RelationshipMultiplicity.One, typeof(WProject.BusinessLibrary.User), "UserInGroups_UserId", RelationshipMultiplicity.Many, typeof(WProject.BusinessLibrary.UserInGroup), true)]

#endregion

namespace WProject.BusinessLibrary
{

    #region WModel

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WModel : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new WModel object.
        /// </summary>
        public WModel() : 
                base(@"metadata=res://*/WpDb.csdl|res://*/WpDb.ssdl|res://*/WpDb.msl;provider=MySql.Data.MySqlClient;provider connection string=""persistsecurityinfo=True;server=localhost;user id=wproject;password=wProject.112;database=wproject""", "WModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new WModel object using the connection string found in the 'WModel' section of the application configuration file.
        /// </summary>
        public WModel(string connectionString) : 
                base(connectionString, "WModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new WModel object.
        /// </summary>
        public WModel(EntityConnection connection) : base(connection, "WModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Access> Accesses
        {
            get
            {
                if ((_Accesses == null))
                {
                    _Accesses = base.CreateObjectSet<Access>("Accesses");
                }
                return _Accesses;
            }
        }
        private ObjectSet<Access> _Accesses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessObject> AccessObjects
        {
            get
            {
                if ((_AccessObjects == null))
                {
                    _AccessObjects = base.CreateObjectSet<AccessObject>("AccessObjects");
                }
                return _AccessObjects;
            }
        }
        private ObjectSet<AccessObject> _AccessObjects;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActiveSession> ActiveSessions
        {
            get
            {
                if ((_ActiveSessions == null))
                {
                    _ActiveSessions = base.CreateObjectSet<ActiveSession>("ActiveSessions");
                }
                return _ActiveSessions;
            }
        }
        private ObjectSet<ActiveSession> _ActiveSessions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppSetting> AppSettings
        {
            get
            {
                if ((_AppSettings == null))
                {
                    _AppSettings = base.CreateObjectSet<AppSetting>("AppSettings");
                }
                return _AppSettings;
            }
        }
        private ObjectSet<AppSetting> _AppSettings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Backlog> Backlogs
        {
            get
            {
                if ((_Backlogs == null))
                {
                    _Backlogs = base.CreateObjectSet<Backlog>("Backlogs");
                }
                return _Backlogs;
            }
        }
        private ObjectSet<Backlog> _Backlogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DictItem> DictItems
        {
            get
            {
                if ((_DictItems == null))
                {
                    _DictItems = base.CreateObjectSet<DictItem>("DictItems");
                }
                return _DictItems;
            }
        }
        private ObjectSet<DictItem> _DictItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectSetting> ProjectSettings
        {
            get
            {
                if ((_ProjectSettings == null))
                {
                    _ProjectSettings = base.CreateObjectSet<ProjectSetting>("ProjectSettings");
                }
                return _ProjectSettings;
            }
        }
        private ObjectSet<ProjectSetting> _ProjectSettings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Spring> Springs
        {
            get
            {
                if ((_Springs == null))
                {
                    _Springs = base.CreateObjectSet<Spring>("Springs");
                }
                return _Springs;
            }
        }
        private ObjectSet<Spring> _Springs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskAttachement> TaskAttachements
        {
            get
            {
                if ((_TaskAttachements == null))
                {
                    _TaskAttachements = base.CreateObjectSet<TaskAttachement>("TaskAttachements");
                }
                return _TaskAttachements;
            }
        }
        private ObjectSet<TaskAttachement> _TaskAttachements;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskDependency> TaskDependencies
        {
            get
            {
                if ((_TaskDependencies == null))
                {
                    _TaskDependencies = base.CreateObjectSet<TaskDependency>("TaskDependencies");
                }
                return _TaskDependencies;
            }
        }
        private ObjectSet<TaskDependency> _TaskDependencies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskHistory> TaskHistories
        {
            get
            {
                if ((_TaskHistories == null))
                {
                    _TaskHistories = base.CreateObjectSet<TaskHistory>("TaskHistories");
                }
                return _TaskHistories;
            }
        }
        private ObjectSet<TaskHistory> _TaskHistories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskTag> TaskTags
        {
            get
            {
                if ((_TaskTags == null))
                {
                    _TaskTags = base.CreateObjectSet<TaskTag>("TaskTags");
                }
                return _TaskTags;
            }
        }
        private ObjectSet<TaskTag> _TaskTags;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInGroup> UserInGroups
        {
            get
            {
                if ((_UserInGroups == null))
                {
                    _UserInGroups = base.CreateObjectSet<UserInGroup>("UserInGroups");
                }
                return _UserInGroups;
            }
        }
        private ObjectSet<UserInGroup> _UserInGroups;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Accesses EntitySet.
        /// </summary>
        public void AddToAccesses(Access access)
        {
            base.AddObject("Accesses", access);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AccessObjects EntitySet.
        /// </summary>
        public void AddToAccessObjects(AccessObject accessObject)
        {
            base.AddObject("AccessObjects", accessObject);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ActiveSessions EntitySet.
        /// </summary>
        public void AddToActiveSessions(ActiveSession activeSession)
        {
            base.AddObject("ActiveSessions", activeSession);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AppSettings EntitySet.
        /// </summary>
        public void AddToAppSettings(AppSetting appSetting)
        {
            base.AddObject("AppSettings", appSetting);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Backlogs EntitySet.
        /// </summary>
        public void AddToBacklogs(Backlog backlog)
        {
            base.AddObject("Backlogs", backlog);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the DictItems EntitySet.
        /// </summary>
        public void AddToDictItems(DictItem dictItem)
        {
            base.AddObject("DictItems", dictItem);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectSettings EntitySet.
        /// </summary>
        public void AddToProjectSettings(ProjectSetting projectSetting)
        {
            base.AddObject("ProjectSettings", projectSetting);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Springs EntitySet.
        /// </summary>
        public void AddToSprings(Spring spring)
        {
            base.AddObject("Springs", spring);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TaskAttachements EntitySet.
        /// </summary>
        public void AddToTaskAttachements(TaskAttachement taskAttachement)
        {
            base.AddObject("TaskAttachements", taskAttachement);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TaskDependencies EntitySet.
        /// </summary>
        public void AddToTaskDependencies(TaskDependency taskDependency)
        {
            base.AddObject("TaskDependencies", taskDependency);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TaskHistories EntitySet.
        /// </summary>
        public void AddToTaskHistories(TaskHistory taskHistory)
        {
            base.AddObject("TaskHistories", taskHistory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TaskTags EntitySet.
        /// </summary>
        public void AddToTaskTags(TaskTag taskTag)
        {
            base.AddObject("TaskTags", taskTag);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserInGroups EntitySet.
        /// </summary>
        public void AddToUserInGroups(UserInGroup userInGroup)
        {
            base.AddObject("UserInGroups", userInGroup);
        }

        #endregion
    }

    #endregion
}

namespace WProject.BusinessLibrary
{

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.Access in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="Access")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Access : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Access object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="accessId">Initial value of AccessId.</param>
        public static Access CreateAccess(int id, int accessId)
        {
            Access access = new Access();
            access.Id = id;
            access.AccessId = accessId;
            return access;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> UserId
        {
            get
            {
                global::System.Nullable<int> value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _UserId;
        partial void OnGetUserId(ref global::System.Nullable<int> value);
        partial void OnUserIdChanging(ref global::System.Nullable<int> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for GroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> GroupId
        {
            get
            {
                global::System.Nullable<int> value = _GroupId;
                OnGetGroupId(ref value);
                return value;
            }
            set
            {
                if (_GroupId != value)
                {
                  OnGroupIdChanging(ref value);
                  ReportPropertyChanging("GroupId");
                  _GroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GroupId");
                  OnGroupIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _GroupId;
        partial void OnGetGroupId(ref global::System.Nullable<int> value);
        partial void OnGroupIdChanging(ref global::System.Nullable<int> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// There are no comments for AccessId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int AccessId
        {
            get
            {
                int value = _AccessId;
                OnGetAccessId(ref value);
                return value;
            }
            set
            {
                if (_AccessId != value)
                {
                  OnAccessIdChanging(ref value);
                  ReportPropertyChanging("AccessId");
                  _AccessId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccessId");
                  OnAccessIdChanged();
              }
            }
        }
        private int _AccessId;
        partial void OnGetAccessId(ref int value);
        partial void OnAccessIdChanging(ref int value);
        partial void OnAccessIdChanged();
    
        /// <summary>
        /// There are no comments for Read in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Read
        {
            get
            {
                global::System.Nullable<sbyte> value = _Read;
                OnGetRead(ref value);
                return value;
            }
            set
            {
                if (_Read != value)
                {
                  OnReadChanging(ref value);
                  ReportPropertyChanging("Read");
                  _Read = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Read");
                  OnReadChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Read;
        partial void OnGetRead(ref global::System.Nullable<sbyte> value);
        partial void OnReadChanging(ref global::System.Nullable<sbyte> value);
        partial void OnReadChanged();
    
        /// <summary>
        /// There are no comments for Add in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Add
        {
            get
            {
                global::System.Nullable<sbyte> value = _Add;
                OnGetAdd(ref value);
                return value;
            }
            set
            {
                if (_Add != value)
                {
                  OnAddChanging(ref value);
                  ReportPropertyChanging("Add");
                  _Add = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Add");
                  OnAddChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Add;
        partial void OnGetAdd(ref global::System.Nullable<sbyte> value);
        partial void OnAddChanging(ref global::System.Nullable<sbyte> value);
        partial void OnAddChanged();
    
        /// <summary>
        /// There are no comments for Edit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Edit
        {
            get
            {
                global::System.Nullable<sbyte> value = _Edit;
                OnGetEdit(ref value);
                return value;
            }
            set
            {
                if (_Edit != value)
                {
                  OnEditChanging(ref value);
                  ReportPropertyChanging("Edit");
                  _Edit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Edit");
                  OnEditChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Edit;
        partial void OnGetEdit(ref global::System.Nullable<sbyte> value);
        partial void OnEditChanging(ref global::System.Nullable<sbyte> value);
        partial void OnEditChanged();
    
        /// <summary>
        /// There are no comments for Delete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Delete
        {
            get
            {
                global::System.Nullable<sbyte> value = _Delete;
                OnGetDelete(ref value);
                return value;
            }
            set
            {
                if (_Delete != value)
                {
                  OnDeleteChanging(ref value);
                  ReportPropertyChanging("Delete");
                  _Delete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Delete");
                  OnDeleteChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Delete;
        partial void OnGetDelete(ref global::System.Nullable<sbyte> value);
        partial void OnDeleteChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeleteChanged();
    
        /// <summary>
        /// There are no comments for AccessGrantedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> AccessGrantedAt
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _AccessGrantedAt;
                OnGetAccessGrantedAt(ref value);
                return value;
            }
            set
            {
                if (_AccessGrantedAt != value)
                {
                  OnAccessGrantedAtChanging(ref value);
                  ReportPropertyChanging("AccessGrantedAt");
                  _AccessGrantedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccessGrantedAt");
                  OnAccessGrantedAtChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _AccessGrantedAt;
        partial void OnGetAccessGrantedAt(ref global::System.Nullable<System.DateTime> value);
        partial void OnAccessGrantedAtChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnAccessGrantedAtChanged();
    
        /// <summary>
        /// There are no comments for AccessGrantedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> AccessGrantedBy
        {
            get
            {
                global::System.Nullable<int> value = _AccessGrantedBy;
                OnGetAccessGrantedBy(ref value);
                return value;
            }
            set
            {
                if (_AccessGrantedBy != value)
                {
                  OnAccessGrantedByChanging(ref value);
                  ReportPropertyChanging("AccessGrantedBy");
                  _AccessGrantedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccessGrantedBy");
                  OnAccessGrantedByChanged();
              }
            }
        }
        private global::System.Nullable<int> _AccessGrantedBy;
        partial void OnGetAccessGrantedBy(ref global::System.Nullable<int> value);
        partial void OnAccessGrantedByChanging(ref global::System.Nullable<int> value);
        partial void OnAccessGrantedByChanged();
    
        /// <summary>
        /// There are no comments for ObjectId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ObjectId
        {
            get
            {
                global::System.Nullable<int> value = _ObjectId;
                OnGetObjectId(ref value);
                return value;
            }
            set
            {
                if (_ObjectId != value)
                {
                  OnObjectIdChanging(ref value);
                  ReportPropertyChanging("ObjectId");
                  _ObjectId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ObjectId");
                  OnObjectIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _ObjectId;
        partial void OnGetObjectId(ref global::System.Nullable<int> value);
        partial void OnObjectIdChanging(ref global::System.Nullable<int> value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// There are no comments for Comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Comment
        {
            get
            {
                string value = _Comment;
                OnGetComment(ref value);
                return value;
            }
            set
            {
                if (_Comment != value)
                {
                  OnCommentChanging(ref value);
                  ReportPropertyChanging("Comment");
                  _Comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Comment");
                  OnCommentChanged();
              }
            }
        }
        private string _Comment;
        partial void OnGetComment(ref string value);
        partial void OnCommentChanging(ref string value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Deleted
        {
            get
            {
                global::System.Nullable<bool> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccessObject in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "access_object_access_FK_access_id", "AccessObject")]
        public AccessObject AccessObject
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccessObject>("WProject.BusinessLibrary.access_object_access_FK_access_id", "AccessObject").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccessObject>("WProject.BusinessLibrary.access_object_access_FK_access_id", "AccessObject").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccessObject in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessObject> AccessObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccessObject>("WProject.BusinessLibrary.access_object_access_FK_access_id", "AccessObject");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccessObject>("WProject.BusinessLibrary.access_object_access_FK_access_id", "AccessObject", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccessObject>("WProject.BusinessLibrary.access_object_access_FK_access_id", "AccessObject").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Group in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "access_object_group_FK_group_id", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Group>("WProject.BusinessLibrary.access_object_group_FK_group_id", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Group>("WProject.BusinessLibrary.access_object_group_FK_group_id", "Group").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Group in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Group>("WProject.BusinessLibrary.access_object_group_FK_group_id", "Group");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Group>("WProject.BusinessLibrary.access_object_group_FK_group_id", "Group", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Group>("WProject.BusinessLibrary.access_object_group_FK_group_id", "Group").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_AccessGrantedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "access_object_user_FK_access_granted_by", "User_AccessGrantedBy")]
        public User User_AccessGrantedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_access_granted_by", "User_AccessGrantedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_access_granted_by", "User_AccessGrantedBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_AccessGrantedBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_AccessGrantedByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_access_granted_by", "User_AccessGrantedBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_access_granted_by", "User_AccessGrantedBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_access_granted_by", "User_AccessGrantedBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "access_object_user_FK_user_id", "User_UserId")]
        public User User_UserId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_user_id", "User_UserId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_user_id", "User_UserId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_UserIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_user_id", "User_UserId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_user_id", "User_UserId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.access_object_user_FK_user_id", "User_UserId").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.AccessObject in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="AccessObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessObject : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccessObject object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="code">Initial value of Code.</param>
        public static AccessObject CreateAccessObject(int id, string name, string code)
        {
            AccessObject accessObject = new AccessObject();
            accessObject.Id = id;
            accessObject.Name = name;
            accessObject.Code = code;
            return accessObject;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Deleted
        {
            get
            {
                global::System.Nullable<bool> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Accesses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "access_object_access_FK_access_id", "Accesses")]
        public EntityCollection<Access> Accesses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Access>("WProject.BusinessLibrary.access_object_access_FK_access_id", "Accesses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Access>("WProject.BusinessLibrary.access_object_access_FK_access_id", "Accesses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Logs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "log_access_object_FK_access_object_id", "Logs")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Log>("WProject.BusinessLibrary.log_access_object_FK_access_object_id", "Logs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Log>("WProject.BusinessLibrary.log_access_object_FK_access_object_id", "Logs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.ActiveSession in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="ActiveSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActiveSession : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ActiveSession object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="createdAt">Initial value of CreatedAt.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static ActiveSession CreateActiveSession(int id, global::System.DateTime createdAt, int userId)
        {
            ActiveSession activeSession = new ActiveSession();
            activeSession.Id = id;
            activeSession.CreatedAt = createdAt;
            activeSession.UserId = userId;
            return activeSession;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                global::System.DateTime value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.DateTime value);
        partial void OnCreatedAtChanging(ref global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for Uid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Uid
        {
            get
            {
                string value = _Uid;
                OnGetUid(ref value);
                return value;
            }
            set
            {
                if (_Uid != value)
                {
                  OnUidChanging(ref value);
                  ReportPropertyChanging("Uid");
                  _Uid = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Uid");
                  OnUidChanged();
              }
            }
        }
        private string _Uid;
        partial void OnGetUid(ref string value);
        partial void OnUidChanging(ref string value);
        partial void OnUidChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                int value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private int _UserId;
        partial void OnGetUserId(ref int value);
        partial void OnUserIdChanging(ref int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for LastHeartBeat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> LastHeartBeat
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _LastHeartBeat;
                OnGetLastHeartBeat(ref value);
                return value;
            }
            set
            {
                if (_LastHeartBeat != value)
                {
                  OnLastHeartBeatChanging(ref value);
                  ReportPropertyChanging("LastHeartBeat");
                  _LastHeartBeat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastHeartBeat");
                  OnLastHeartBeatChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _LastHeartBeat;
        partial void OnGetLastHeartBeat(ref global::System.Nullable<System.DateTime> value);
        partial void OnLastHeartBeatChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnLastHeartBeatChanged();
    
        /// <summary>
        /// There are no comments for Ip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Ip
        {
            get
            {
                string value = _Ip;
                OnGetIp(ref value);
                return value;
            }
            set
            {
                if (_Ip != value)
                {
                  OnIpChanging(ref value);
                  ReportPropertyChanging("Ip");
                  _Ip = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Ip");
                  OnIpChanged();
              }
            }
        }
        private string _Ip;
        partial void OnGetIp(ref string value);
        partial void OnIpChanging(ref string value);
        partial void OnIpChanged();
    
        /// <summary>
        /// There are no comments for ContextId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ContextId
        {
            get
            {
                string value = _ContextId;
                OnGetContextId(ref value);
                return value;
            }
            set
            {
                if (_ContextId != value)
                {
                  OnContextIdChanging(ref value);
                  ReportPropertyChanging("ContextId");
                  _ContextId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ContextId");
                  OnContextIdChanged();
              }
            }
        }
        private string _ContextId;
        partial void OnGetContextId(ref string value);
        partial void OnContextIdChanging(ref string value);
        partial void OnContextIdChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "active_session_user_FK_user_id", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.active_session_user_FK_user_id", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.active_session_user_FK_user_id", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.active_session_user_FK_user_id", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.active_session_user_FK_user_id", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.active_session_user_FK_user_id", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.AppSetting in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="AppSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppSetting : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AppSetting object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="key">Initial value of Key.</param>
        /// <param name="value">Initial value of Value.</param>
        public static AppSetting CreateAppSetting(int id, string key, string value)
        {
            AppSetting appSetting = new AppSetting();
            appSetting.Id = id;
            appSetting.Key = key;
            appSetting.Value = value;
            return appSetting;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Key in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Key
        {
            get
            {
                string value = _Key;
                OnGetKey(ref value);
                return value;
            }
            set
            {
                if (_Key != value)
                {
                  OnKeyChanging(ref value);
                  ReportPropertyChanging("Key");
                  _Key = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Key");
                  OnKeyChanged();
              }
            }
        }
        private string _Key;
        partial void OnGetKey(ref string value);
        partial void OnKeyChanging(ref string value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// There are no comments for Value in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                string value = _Value;
                OnGetValue(ref value);
                return value;
            }
            set
            {
                if (_Value != value)
                {
                  OnValueChanging(ref value);
                  ReportPropertyChanging("Value");
                  _Value = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Value");
                  OnValueChanged();
              }
            }
        }
        private string _Value;
        partial void OnGetValue(ref string value);
        partial void OnValueChanging(ref string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// There are no comments for LastUpdatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> LastUpdatedAt
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _LastUpdatedAt;
                OnGetLastUpdatedAt(ref value);
                return value;
            }
            set
            {
                if (_LastUpdatedAt != value)
                {
                  OnLastUpdatedAtChanging(ref value);
                  ReportPropertyChanging("LastUpdatedAt");
                  _LastUpdatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastUpdatedAt");
                  OnLastUpdatedAtChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _LastUpdatedAt;
        partial void OnGetLastUpdatedAt(ref global::System.Nullable<System.DateTime> value);
        partial void OnLastUpdatedAtChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnLastUpdatedAtChanged();
    
        /// <summary>
        /// There are no comments for LastUpdatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LastUpdatedBy
        {
            get
            {
                global::System.Nullable<int> value = _LastUpdatedBy;
                OnGetLastUpdatedBy(ref value);
                return value;
            }
            set
            {
                if (_LastUpdatedBy != value)
                {
                  OnLastUpdatedByChanging(ref value);
                  ReportPropertyChanging("LastUpdatedBy");
                  _LastUpdatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastUpdatedBy");
                  OnLastUpdatedByChanged();
              }
            }
        }
        private global::System.Nullable<int> _LastUpdatedBy;
        partial void OnGetLastUpdatedBy(ref global::System.Nullable<int> value);
        partial void OnLastUpdatedByChanging(ref global::System.Nullable<int> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// There are no comments for Comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Comment
        {
            get
            {
                string value = _Comment;
                OnGetComment(ref value);
                return value;
            }
            set
            {
                if (_Comment != value)
                {
                  OnCommentChanging(ref value);
                  ReportPropertyChanging("Comment");
                  _Comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Comment");
                  OnCommentChanged();
              }
            }
        }
        private string _Comment;
        partial void OnGetComment(ref string value);
        partial void OnCommentChanging(ref string value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Deleted
        {
            get
            {
                global::System.Nullable<bool> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "app_setting_user_FK_last_updated_by", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.app_setting_user_FK_last_updated_by", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.app_setting_user_FK_last_updated_by", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.app_setting_user_FK_last_updated_by", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.app_setting_user_FK_last_updated_by", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.app_setting_user_FK_last_updated_by", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.Backlog in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="Backlog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Backlog : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Backlog object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="createdAt">Initial value of CreatedAt.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        /// <param name="stateId">Initial value of StateId.</param>
        /// <param name="typeId">Initial value of TypeId.</param>
        /// <param name="categoryId">Initial value of CategoryId.</param>
        public static Backlog CreateBacklog(int id, string name, global::System.DateTime createdAt, int createdBy, int stateId, int typeId, int categoryId)
        {
            Backlog backlog = new Backlog();
            backlog.Id = id;
            backlog.Name = name;
            backlog.CreatedAt = createdAt;
            backlog.CreatedBy = createdBy;
            backlog.StateId = stateId;
            backlog.TypeId = typeId;
            backlog.CategoryId = categoryId;
            return backlog;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                global::System.DateTime value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.DateTime value);
        partial void OnCreatedAtChanging(ref global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                int value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private int _CreatedBy;
        partial void OnGetCreatedBy(ref int value);
        partial void OnCreatedByChanging(ref int value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for AssignedTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> AssignedTo
        {
            get
            {
                global::System.Nullable<int> value = _AssignedTo;
                OnGetAssignedTo(ref value);
                return value;
            }
            set
            {
                if (_AssignedTo != value)
                {
                  OnAssignedToChanging(ref value);
                  ReportPropertyChanging("AssignedTo");
                  _AssignedTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AssignedTo");
                  OnAssignedToChanged();
              }
            }
        }
        private global::System.Nullable<int> _AssignedTo;
        partial void OnGetAssignedTo(ref global::System.Nullable<int> value);
        partial void OnAssignedToChanging(ref global::System.Nullable<int> value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// There are no comments for StateId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int StateId
        {
            get
            {
                int value = _StateId;
                OnGetStateId(ref value);
                return value;
            }
            set
            {
                if (_StateId != value)
                {
                  OnStateIdChanging(ref value);
                  ReportPropertyChanging("StateId");
                  _StateId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StateId");
                  OnStateIdChanged();
              }
            }
        }
        private int _StateId;
        partial void OnGetStateId(ref int value);
        partial void OnStateIdChanging(ref int value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// There are no comments for TypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int TypeId
        {
            get
            {
                int value = _TypeId;
                OnGetTypeId(ref value);
                return value;
            }
            set
            {
                if (_TypeId != value)
                {
                  OnTypeIdChanging(ref value);
                  ReportPropertyChanging("TypeId");
                  _TypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TypeId");
                  OnTypeIdChanged();
              }
            }
        }
        private int _TypeId;
        partial void OnGetTypeId(ref int value);
        partial void OnTypeIdChanging(ref int value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// There are no comments for CategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int CategoryId
        {
            get
            {
                int value = _CategoryId;
                OnGetCategoryId(ref value);
                return value;
            }
            set
            {
                if (_CategoryId != value)
                {
                  OnCategoryIdChanging(ref value);
                  ReportPropertyChanging("CategoryId");
                  _CategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CategoryId");
                  OnCategoryIdChanged();
              }
            }
        }
        private int _CategoryId;
        partial void OnGetCategoryId(ref int value);
        partial void OnCategoryIdChanging(ref int value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for Priority in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Priority
        {
            get
            {
                global::System.Nullable<int> value = _Priority;
                OnGetPriority(ref value);
                return value;
            }
            set
            {
                if (_Priority != value)
                {
                  OnPriorityChanging(ref value);
                  ReportPropertyChanging("Priority");
                  _Priority = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Priority");
                  OnPriorityChanged();
              }
            }
        }
        private global::System.Nullable<int> _Priority;
        partial void OnGetPriority(ref global::System.Nullable<int> value);
        partial void OnPriorityChanging(ref global::System.Nullable<int> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// There are no comments for PeriodFrom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodFrom
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodFrom;
                OnGetPeriodFrom(ref value);
                return value;
            }
            set
            {
                if (_PeriodFrom != value)
                {
                  OnPeriodFromChanging(ref value);
                  ReportPropertyChanging("PeriodFrom");
                  _PeriodFrom = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodFrom");
                  OnPeriodFromChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodFrom;
        partial void OnGetPeriodFrom(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanged();
    
        /// <summary>
        /// There are no comments for PeriodTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodTo
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodTo;
                OnGetPeriodTo(ref value);
                return value;
            }
            set
            {
                if (_PeriodTo != value)
                {
                  OnPeriodToChanging(ref value);
                  ReportPropertyChanging("PeriodTo");
                  _PeriodTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodTo");
                  OnPeriodToChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodTo;
        partial void OnGetPeriodTo(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanged();
    
        /// <summary>
        /// in minutes
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> RemainingWork
        {
            get
            {
                global::System.Nullable<int> value = _RemainingWork;
                OnGetRemainingWork(ref value);
                return value;
            }
            set
            {
                if (_RemainingWork != value)
                {
                  OnRemainingWorkChanging(ref value);
                  ReportPropertyChanging("RemainingWork");
                  _RemainingWork = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RemainingWork");
                  OnRemainingWorkChanged();
              }
            }
        }
        private global::System.Nullable<int> _RemainingWork;
        partial void OnGetRemainingWork(ref global::System.Nullable<int> value);
        partial void OnRemainingWorkChanging(ref global::System.Nullable<int> value);
        partial void OnRemainingWorkChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Category in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_category_FK_category_id", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("WProject.BusinessLibrary.backlog_category_FK_category_id", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("WProject.BusinessLibrary.backlog_category_FK_category_id", "Category").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Category in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("WProject.BusinessLibrary.backlog_category_FK_category_id", "Category");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Category>("WProject.BusinessLibrary.backlog_category_FK_category_id", "Category", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("WProject.BusinessLibrary.backlog_category_FK_category_id", "Category").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_StateId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_dict_item_FK_state_id", "DictItem_StateId")]
        public DictItem DictItem_StateId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_state_id", "DictItem_StateId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_state_id", "DictItem_StateId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_StateId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_StateIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_state_id", "DictItem_StateId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_state_id", "DictItem_StateId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_state_id", "DictItem_StateId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_TypeId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_dict_item_FK_type_id", "DictItem_TypeId")]
        public DictItem DictItem_TypeId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_type_id", "DictItem_TypeId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_type_id", "DictItem_TypeId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_TypeId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_TypeIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_type_id", "DictItem_TypeId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_type_id", "DictItem_TypeId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.backlog_dict_item_FK_type_id", "DictItem_TypeId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_AssignedTo in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_user_FK_assigned_to", "User_AssignedTo")]
        public User User_AssignedTo
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_assigned_to", "User_AssignedTo").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_assigned_to", "User_AssignedTo").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_AssignedTo in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_AssignedToReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_assigned_to", "User_AssignedTo");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_assigned_to", "User_AssignedTo", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_assigned_to", "User_AssignedTo").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_user_FK_created_by", "User_CreatedBy")]
        public User User_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_created_by", "User_CreatedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_created_by", "User_CreatedBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_created_by", "User_CreatedBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_created_by", "User_CreatedBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.backlog_user_FK_created_by", "User_CreatedBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Tasks in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_backlog_FK_backlog_id", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Task>("WProject.BusinessLibrary.task_backlog_FK_backlog_id", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Task>("WProject.BusinessLibrary.task_backlog_FK_backlog_id", "Tasks", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.Category in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="createdAt">Initial value of CreatedAt.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        /// <param name="ownerId">Initial value of OwnerId.</param>
        /// <param name="springId">Initial value of SpringId.</param>
        public static Category CreateCategory(int id, string name, global::System.DateTime createdAt, int createdBy, int ownerId, int springId)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            category.CreatedAt = createdAt;
            category.CreatedBy = createdBy;
            category.OwnerId = ownerId;
            category.SpringId = springId;
            return category;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                global::System.DateTime value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.DateTime value);
        partial void OnCreatedAtChanging(ref global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                int value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private int _CreatedBy;
        partial void OnGetCreatedBy(ref int value);
        partial void OnCreatedByChanging(ref int value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for OwnerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerId
        {
            get
            {
                int value = _OwnerId;
                OnGetOwnerId(ref value);
                return value;
            }
            set
            {
                if (_OwnerId != value)
                {
                  OnOwnerIdChanging(ref value);
                  ReportPropertyChanging("OwnerId");
                  _OwnerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OwnerId");
                  OnOwnerIdChanged();
              }
            }
        }
        private int _OwnerId;
        partial void OnGetOwnerId(ref int value);
        partial void OnOwnerIdChanging(ref int value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// There are no comments for PeriodFrom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodFrom
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodFrom;
                OnGetPeriodFrom(ref value);
                return value;
            }
            set
            {
                if (_PeriodFrom != value)
                {
                  OnPeriodFromChanging(ref value);
                  ReportPropertyChanging("PeriodFrom");
                  _PeriodFrom = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodFrom");
                  OnPeriodFromChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodFrom;
        partial void OnGetPeriodFrom(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanged();
    
        /// <summary>
        /// There are no comments for PeriodTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodTo
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodTo;
                OnGetPeriodTo(ref value);
                return value;
            }
            set
            {
                if (_PeriodTo != value)
                {
                  OnPeriodToChanging(ref value);
                  ReportPropertyChanging("PeriodTo");
                  _PeriodTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodTo");
                  OnPeriodToChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodTo;
        partial void OnGetPeriodTo(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanged();
    
        /// <summary>
        /// There are no comments for SpringId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int SpringId
        {
            get
            {
                int value = _SpringId;
                OnGetSpringId(ref value);
                return value;
            }
            set
            {
                if (_SpringId != value)
                {
                  OnSpringIdChanging(ref value);
                  ReportPropertyChanging("SpringId");
                  _SpringId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SpringId");
                  OnSpringIdChanged();
              }
            }
        }
        private int _SpringId;
        partial void OnGetSpringId(ref int value);
        partial void OnSpringIdChanging(ref int value);
        partial void OnSpringIdChanged();
    
        /// <summary>
        /// There are no comments for ParentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ParentId
        {
            get
            {
                global::System.Nullable<int> value = _ParentId;
                OnGetParentId(ref value);
                return value;
            }
            set
            {
                if (_ParentId != value)
                {
                  OnParentIdChanging(ref value);
                  ReportPropertyChanging("ParentId");
                  _ParentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentId");
                  OnParentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _ParentId;
        partial void OnGetParentId(ref global::System.Nullable<int> value);
        partial void OnParentIdChanging(ref global::System.Nullable<int> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Backlogs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_category_FK_category_id", "Backlogs")]
        public EntityCollection<Backlog> Backlogs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_category_FK_category_id", "Backlogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_category_FK_category_id", "Backlogs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Categories_ParentId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "category_category_FK_parent_id", "Categories_ParentId")]
        public EntityCollection<Category> Categories_ParentId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Category>("WProject.BusinessLibrary.category_category_FK_parent_id", "Categories_ParentId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Category>("WProject.BusinessLibrary.category_category_FK_parent_id", "Categories_ParentId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Category_ParentId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "category_category_FK_parent_id", "Category_ParentId")]
        public Category Category_ParentId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("WProject.BusinessLibrary.category_category_FK_parent_id", "Category_ParentId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("WProject.BusinessLibrary.category_category_FK_parent_id", "Category_ParentId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Category_ParentId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> Category_ParentIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("WProject.BusinessLibrary.category_category_FK_parent_id", "Category_ParentId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Category>("WProject.BusinessLibrary.category_category_FK_parent_id", "Category_ParentId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("WProject.BusinessLibrary.category_category_FK_parent_id", "Category_ParentId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Spring in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "category_spring_FK_spring_id", "Spring")]
        public Spring Spring
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Spring>("WProject.BusinessLibrary.category_spring_FK_spring_id", "Spring").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Spring>("WProject.BusinessLibrary.category_spring_FK_spring_id", "Spring").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Spring in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Spring> SpringReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Spring>("WProject.BusinessLibrary.category_spring_FK_spring_id", "Spring");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Spring>("WProject.BusinessLibrary.category_spring_FK_spring_id", "Spring", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Spring>("WProject.BusinessLibrary.category_spring_FK_spring_id", "Spring").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "category_user_FK_created_by", "User_CreatedBy")]
        public User User_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_created_by", "User_CreatedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_created_by", "User_CreatedBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_created_by", "User_CreatedBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_created_by", "User_CreatedBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_created_by", "User_CreatedBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_OwnerId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "category_user_FK_owner_id", "User_OwnerId")]
        public User User_OwnerId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_owner_id", "User_OwnerId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_owner_id", "User_OwnerId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_OwnerId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_OwnerIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_owner_id", "User_OwnerId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_owner_id", "User_OwnerId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.category_user_FK_owner_id", "User_OwnerId").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.DictItem in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="DictItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DictItem : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new DictItem object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="type">Initial value of Type.</param>
        public static DictItem CreateDictItem(int id, string name, string type)
        {
            DictItem dictItem = new DictItem();
            dictItem.Id = id;
            dictItem.Name = name;
            dictItem.Type = type;
            return dictItem;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for ParentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ParentId
        {
            get
            {
                global::System.Nullable<int> value = _ParentId;
                OnGetParentId(ref value);
                return value;
            }
            set
            {
                if (_ParentId != value)
                {
                  OnParentIdChanging(ref value);
                  ReportPropertyChanging("ParentId");
                  _ParentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentId");
                  OnParentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _ParentId;
        partial void OnGetParentId(ref global::System.Nullable<int> value);
        partial void OnParentIdChanging(ref global::System.Nullable<int> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// There are no comments for Reserved in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Reserved
        {
            get
            {
                global::System.Nullable<bool> value = _Reserved;
                OnGetReserved(ref value);
                return value;
            }
            set
            {
                if (_Reserved != value)
                {
                  OnReservedChanging(ref value);
                  ReportPropertyChanging("Reserved");
                  _Reserved = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Reserved");
                  OnReservedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Reserved;
        partial void OnGetReserved(ref global::System.Nullable<bool> value);
        partial void OnReservedChanging(ref global::System.Nullable<bool> value);
        partial void OnReservedChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Order in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Order
        {
            get
            {
                global::System.Nullable<int> value = _Order;
                OnGetOrder(ref value);
                return value;
            }
            set
            {
                if (_Order != value)
                {
                  OnOrderChanging(ref value);
                  ReportPropertyChanging("Order");
                  _Order = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Order");
                  OnOrderChanged();
              }
            }
        }
        private global::System.Nullable<int> _Order;
        partial void OnGetOrder(ref global::System.Nullable<int> value);
        partial void OnOrderChanging(ref global::System.Nullable<int> value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// There are no comments for Color in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Color
        {
            get
            {
                string value = _Color;
                OnGetColor(ref value);
                return value;
            }
            set
            {
                if (_Color != value)
                {
                  OnColorChanging(ref value);
                  ReportPropertyChanging("Color");
                  _Color = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Color");
                  OnColorChanged();
              }
            }
        }
        private string _Color;
        partial void OnGetColor(ref string value);
        partial void OnColorChanging(ref string value);
        partial void OnColorChanged();
    
        /// <summary>
        /// There are no comments for Tag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Tag
        {
            get
            {
                string value = _Tag;
                OnGetTag(ref value);
                return value;
            }
            set
            {
                if (_Tag != value)
                {
                  OnTagChanging(ref value);
                  ReportPropertyChanging("Tag");
                  _Tag = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tag");
                  OnTagChanged();
              }
            }
        }
        private string _Tag;
        partial void OnGetTag(ref string value);
        partial void OnTagChanging(ref string value);
        partial void OnTagChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Deleted
        {
            get
            {
                global::System.Nullable<bool> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Backlogs_StateId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_dict_item_FK_state_id", "Backlogs_StateId")]
        public EntityCollection<Backlog> Backlogs_StateId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_dict_item_FK_state_id", "Backlogs_StateId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_dict_item_FK_state_id", "Backlogs_StateId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Backlogs_TypeId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_dict_item_FK_type_id", "Backlogs_TypeId")]
        public EntityCollection<Backlog> Backlogs_TypeId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_dict_item_FK_type_id", "Backlogs_TypeId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_dict_item_FK_type_id", "Backlogs_TypeId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItems_ParentId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "dict_item__dict_item_FK_parent_id", "DictItems_ParentId")]
        public EntityCollection<DictItem> DictItems_ParentId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<DictItem>("WProject.BusinessLibrary.dict_item__dict_item_FK_parent_id", "DictItems_ParentId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<DictItem>("WProject.BusinessLibrary.dict_item__dict_item_FK_parent_id", "DictItems_ParentId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_ParentId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "dict_item__dict_item_FK_parent_id", "DictItem_ParentId")]
        public DictItem DictItem_ParentId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.dict_item__dict_item_FK_parent_id", "DictItem_ParentId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.dict_item__dict_item_FK_parent_id", "DictItem_ParentId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_ParentId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_ParentIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.dict_item__dict_item_FK_parent_id", "DictItem_ParentId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.dict_item__dict_item_FK_parent_id", "DictItem_ParentId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.dict_item__dict_item_FK_parent_id", "DictItem_ParentId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Tasks_StageId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dict_item_FK_stage_id", "Tasks_StageId")]
        public EntityCollection<Task> Tasks_StageId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Task>("WProject.BusinessLibrary.task_dict_item_FK_stage_id", "Tasks_StageId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Task>("WProject.BusinessLibrary.task_dict_item_FK_stage_id", "Tasks_StageId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Tasks_StateId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dict_item_FK_state_id", "Tasks_StateId")]
        public EntityCollection<Task> Tasks_StateId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Task>("WProject.BusinessLibrary.task_dict_item_FK_state_id", "Tasks_StateId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Task>("WProject.BusinessLibrary.task_dict_item_FK_state_id", "Tasks_StateId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Tasks_TypeId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dict_item_FK_type_id", "Tasks_TypeId")]
        public EntityCollection<Task> Tasks_TypeId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Task>("WProject.BusinessLibrary.task_dict_item_FK_type_id", "Tasks_TypeId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Task>("WProject.BusinessLibrary.task_dict_item_FK_type_id", "Tasks_TypeId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskDependencies_BlockOnStageId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_block_on_stage_id", "TaskDependencies_BlockOnStageId")]
        public EntityCollection<TaskDependency> TaskDependencies_BlockOnStageId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_stage_id", "TaskDependencies_BlockOnStageId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_stage_id", "TaskDependencies_BlockOnStageId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskDependencies_BlockOnStateId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_block_on_state_id", "TaskDependencies_BlockOnStateId")]
        public EntityCollection<TaskDependency> TaskDependencies_BlockOnStateId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_state_id", "TaskDependencies_BlockOnStateId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_state_id", "TaskDependencies_BlockOnStateId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskDependencies_DependentStageId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_dependent_stage_id", "TaskDependencies_DependentStageId")]
        public EntityCollection<TaskDependency> TaskDependencies_DependentStageId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_stage_id", "TaskDependencies_DependentStageId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_stage_id", "TaskDependencies_DependentStageId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskDependencies_DependentStateId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_dependent_state_id", "TaskDependencies_DependentStateId")]
        public EntityCollection<TaskDependency> TaskDependencies_DependentStateId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_state_id", "TaskDependencies_DependentStateId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_state_id", "TaskDependencies_DependentStateId", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.File in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="content">Initial value of Content.</param>
        public static File CreateFile(int id, string name, byte[] content)
        {
            File file = new File();
            file.Id = id;
            file.Name = name;
            file.Content = content;
            return file;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for Content in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public byte[] Content
        {
            get
            {
                byte[] value = _Content;
                OnGetContent(ref value);
                return value;
            }
            set
            {
                if (_Content != value)
                {
                  OnContentChanging(ref value);
                  ReportPropertyChanging("Content");
                  _Content = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Content");
                  OnContentChanged();
              }
            }
        }
        private byte[] _Content;
        partial void OnGetContent(ref byte[] value);
        partial void OnContentChanging(ref byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// There are no comments for Thumbnail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] Thumbnail
        {
            get
            {
                byte[] value = _Thumbnail;
                OnGetThumbnail(ref value);
                return value;
            }
            set
            {
                if (_Thumbnail != value)
                {
                  OnThumbnailChanging(ref value);
                  ReportPropertyChanging("Thumbnail");
                  _Thumbnail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Thumbnail");
                  OnThumbnailChanged();
              }
            }
        }
        private byte[] _Thumbnail;
        partial void OnGetThumbnail(ref byte[] value);
        partial void OnThumbnailChanging(ref byte[] value);
        partial void OnThumbnailChanged();
    
        /// <summary>
        /// There are no comments for Size in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<long> Size
        {
            get
            {
                global::System.Nullable<long> value = _Size;
                OnGetSize(ref value);
                return value;
            }
            set
            {
                if (_Size != value)
                {
                  OnSizeChanging(ref value);
                  ReportPropertyChanging("Size");
                  _Size = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Size");
                  OnSizeChanged();
              }
            }
        }
        private global::System.Nullable<long> _Size;
        partial void OnGetSize(ref global::System.Nullable<long> value);
        partial void OnSizeChanging(ref global::System.Nullable<long> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// There are no comments for ParentType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ParentType
        {
            get
            {
                string value = _ParentType;
                OnGetParentType(ref value);
                return value;
            }
            set
            {
                if (_ParentType != value)
                {
                  OnParentTypeChanging(ref value);
                  ReportPropertyChanging("ParentType");
                  _ParentType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ParentType");
                  OnParentTypeChanged();
              }
            }
        }
        private string _ParentType;
        partial void OnGetParentType(ref string value);
        partial void OnParentTypeChanging(ref string value);
        partial void OnParentTypeChanged();
    
        /// <summary>
        /// There are no comments for ParentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ParentId
        {
            get
            {
                global::System.Nullable<int> value = _ParentId;
                OnGetParentId(ref value);
                return value;
            }
            set
            {
                if (_ParentId != value)
                {
                  OnParentIdChanging(ref value);
                  ReportPropertyChanging("ParentId");
                  _ParentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentId");
                  OnParentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _ParentId;
        partial void OnGetParentId(ref global::System.Nullable<int> value);
        partial void OnParentIdChanging(ref global::System.Nullable<int> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Path in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Path
        {
            get
            {
                string value = _Path;
                OnGetPath(ref value);
                return value;
            }
            set
            {
                if (_Path != value)
                {
                  OnPathChanging(ref value);
                  ReportPropertyChanging("Path");
                  _Path = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Path");
                  OnPathChanged();
              }
            }
        }
        private string _Path;
        partial void OnGetPath(ref string value);
        partial void OnPathChanging(ref string value);
        partial void OnPathChanged();
    
        /// <summary>
        /// There are no comments for Url in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Url
        {
            get
            {
                string value = _Url;
                OnGetUrl(ref value);
                return value;
            }
            set
            {
                if (_Url != value)
                {
                  OnUrlChanging(ref value);
                  ReportPropertyChanging("Url");
                  _Url = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Url");
                  OnUrlChanged();
              }
            }
        }
        private string _Url;
        partial void OnGetUrl(ref string value);
        partial void OnUrlChanging(ref string value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> CreatedAt
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.Nullable<System.DateTime> value);
        partial void OnCreatedAtChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> CreatedBy
        {
            get
            {
                global::System.Nullable<int> value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private global::System.Nullable<int> _CreatedBy;
        partial void OnGetCreatedBy(ref global::System.Nullable<int> value);
        partial void OnCreatedByChanging(ref global::System.Nullable<int> value);
        partial void OnCreatedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "file_user_FK_created_by", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.file_user_FK_created_by", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.file_user_FK_created_by", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.file_user_FK_created_by", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.file_user_FK_created_by", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.file_user_FK_created_by", "User").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskAttachements in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_attachement_file_FK_file_id", "TaskAttachements")]
        public EntityCollection<TaskAttachement> TaskAttachements
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskAttachement>("WProject.BusinessLibrary.task_attachement_file_FK_file_id", "TaskAttachements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskAttachement>("WProject.BusinessLibrary.task_attachement_file_FK_file_id", "TaskAttachements", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.Group in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="created">Initial value of Created.</param>
        /// <param name="ownerId">Initial value of OwnerId.</param>
        public static Group CreateGroup(int id, string name, global::System.DateTime created, int ownerId)
        {
            Group group = new Group();
            group.Id = id;
            group.Name = name;
            group.Created = created;
            group.OwnerId = ownerId;
            return group;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Created in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                global::System.DateTime value = _Created;
                OnGetCreated(ref value);
                return value;
            }
            set
            {
                if (_Created != value)
                {
                  OnCreatedChanging(ref value);
                  ReportPropertyChanging("Created");
                  _Created = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Created");
                  OnCreatedChanged();
              }
            }
        }
        private global::System.DateTime _Created;
        partial void OnGetCreated(ref global::System.DateTime value);
        partial void OnCreatedChanging(ref global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// There are no comments for OwnerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerId
        {
            get
            {
                int value = _OwnerId;
                OnGetOwnerId(ref value);
                return value;
            }
            set
            {
                if (_OwnerId != value)
                {
                  OnOwnerIdChanging(ref value);
                  ReportPropertyChanging("OwnerId");
                  _OwnerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OwnerId");
                  OnOwnerIdChanged();
              }
            }
        }
        private int _OwnerId;
        partial void OnGetOwnerId(ref int value);
        partial void OnOwnerIdChanging(ref int value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Deleted
        {
            get
            {
                global::System.Nullable<bool> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Accesses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "access_object_group_FK_group_id", "Accesses")]
        public EntityCollection<Access> Accesses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Access>("WProject.BusinessLibrary.access_object_group_FK_group_id", "Accesses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Access>("WProject.BusinessLibrary.access_object_group_FK_group_id", "Accesses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "group_user_FK_owner_id", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.group_user_FK_owner_id", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.group_user_FK_owner_id", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.group_user_FK_owner_id", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.group_user_FK_owner_id", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.group_user_FK_owner_id", "User").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserInGroups in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_group_id", "UserInGroups")]
        public EntityCollection<UserInGroup> UserInGroups
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserInGroup>("WProject.BusinessLibrary.user_in_group_user_FK_group_id", "UserInGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserInGroup>("WProject.BusinessLibrary.user_in_group_user_FK_group_id", "UserInGroups", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.Log in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static Log CreateLog(int id)
        {
            Log log = new Log();
            log.Id = id;
            return log;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Date in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> Date
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Date;
                OnGetDate(ref value);
                return value;
            }
            set
            {
                if (_Date != value)
                {
                  OnDateChanging(ref value);
                  ReportPropertyChanging("Date");
                  _Date = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Date");
                  OnDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Date;
        partial void OnGetDate(ref global::System.Nullable<System.DateTime> value);
        partial void OnDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// There are no comments for EntryType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> EntryType
        {
            get
            {
                global::System.Nullable<sbyte> value = _EntryType;
                OnGetEntryType(ref value);
                return value;
            }
            set
            {
                if (_EntryType != value)
                {
                  OnEntryTypeChanging(ref value);
                  ReportPropertyChanging("EntryType");
                  _EntryType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntryType");
                  OnEntryTypeChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _EntryType;
        partial void OnGetEntryType(ref global::System.Nullable<sbyte> value);
        partial void OnEntryTypeChanging(ref global::System.Nullable<sbyte> value);
        partial void OnEntryTypeChanged();
    
        /// <summary>
        /// There are no comments for Ip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Ip
        {
            get
            {
                string value = _Ip;
                OnGetIp(ref value);
                return value;
            }
            set
            {
                if (_Ip != value)
                {
                  OnIpChanging(ref value);
                  ReportPropertyChanging("Ip");
                  _Ip = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Ip");
                  OnIpChanged();
              }
            }
        }
        private string _Ip;
        partial void OnGetIp(ref string value);
        partial void OnIpChanging(ref string value);
        partial void OnIpChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> UserId
        {
            get
            {
                global::System.Nullable<int> value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _UserId;
        partial void OnGetUserId(ref global::System.Nullable<int> value);
        partial void OnUserIdChanging(ref global::System.Nullable<int> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for AccessObjectId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> AccessObjectId
        {
            get
            {
                global::System.Nullable<int> value = _AccessObjectId;
                OnGetAccessObjectId(ref value);
                return value;
            }
            set
            {
                if (_AccessObjectId != value)
                {
                  OnAccessObjectIdChanging(ref value);
                  ReportPropertyChanging("AccessObjectId");
                  _AccessObjectId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccessObjectId");
                  OnAccessObjectIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _AccessObjectId;
        partial void OnGetAccessObjectId(ref global::System.Nullable<int> value);
        partial void OnAccessObjectIdChanging(ref global::System.Nullable<int> value);
        partial void OnAccessObjectIdChanged();
    
        /// <summary>
        /// There are no comments for Action in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Action
        {
            get
            {
                global::System.Nullable<sbyte> value = _Action;
                OnGetAction(ref value);
                return value;
            }
            set
            {
                if (_Action != value)
                {
                  OnActionChanging(ref value);
                  ReportPropertyChanging("Action");
                  _Action = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Action");
                  OnActionChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Action;
        partial void OnGetAction(ref global::System.Nullable<sbyte> value);
        partial void OnActionChanging(ref global::System.Nullable<sbyte> value);
        partial void OnActionChanged();
    
        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Details
        {
            get
            {
                string value = _Details;
                OnGetDetails(ref value);
                return value;
            }
            set
            {
                if (_Details != value)
                {
                  OnDetailsChanging(ref value);
                  ReportPropertyChanging("Details");
                  _Details = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Details");
                  OnDetailsChanged();
              }
            }
        }
        private string _Details;
        partial void OnGetDetails(ref string value);
        partial void OnDetailsChanging(ref string value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Important in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Important
        {
            get
            {
                global::System.Nullable<sbyte> value = _Important;
                OnGetImportant(ref value);
                return value;
            }
            set
            {
                if (_Important != value)
                {
                  OnImportantChanging(ref value);
                  ReportPropertyChanging("Important");
                  _Important = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Important");
                  OnImportantChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Important;
        partial void OnGetImportant(ref global::System.Nullable<sbyte> value);
        partial void OnImportantChanging(ref global::System.Nullable<sbyte> value);
        partial void OnImportantChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccessObject in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "log_access_object_FK_access_object_id", "AccessObject")]
        public AccessObject AccessObject
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccessObject>("WProject.BusinessLibrary.log_access_object_FK_access_object_id", "AccessObject").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccessObject>("WProject.BusinessLibrary.log_access_object_FK_access_object_id", "AccessObject").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccessObject in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessObject> AccessObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccessObject>("WProject.BusinessLibrary.log_access_object_FK_access_object_id", "AccessObject");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccessObject>("WProject.BusinessLibrary.log_access_object_FK_access_object_id", "AccessObject", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccessObject>("WProject.BusinessLibrary.log_access_object_FK_access_object_id", "AccessObject").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "log_user_FK_user_id", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.log_user_FK_user_id", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.log_user_FK_user_id", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.log_user_FK_user_id", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.log_user_FK_user_id", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.log_user_FK_user_id", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.Project in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="createdAt">Initial value of CreatedAt.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        /// <param name="ownerId">Initial value of OwnerId.</param>
        public static Project CreateProject(int id, string name, global::System.DateTime createdAt, int createdBy, int ownerId)
        {
            Project project = new Project();
            project.Id = id;
            project.Name = name;
            project.CreatedAt = createdAt;
            project.CreatedBy = createdBy;
            project.OwnerId = ownerId;
            return project;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                global::System.DateTime value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.DateTime value);
        partial void OnCreatedAtChanging(ref global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                int value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private int _CreatedBy;
        partial void OnGetCreatedBy(ref int value);
        partial void OnCreatedByChanging(ref int value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for OwnerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerId
        {
            get
            {
                int value = _OwnerId;
                OnGetOwnerId(ref value);
                return value;
            }
            set
            {
                if (_OwnerId != value)
                {
                  OnOwnerIdChanging(ref value);
                  ReportPropertyChanging("OwnerId");
                  _OwnerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OwnerId");
                  OnOwnerIdChanged();
              }
            }
        }
        private int _OwnerId;
        partial void OnGetOwnerId(ref int value);
        partial void OnOwnerIdChanging(ref int value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// There are no comments for PeriodFrom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodFrom
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodFrom;
                OnGetPeriodFrom(ref value);
                return value;
            }
            set
            {
                if (_PeriodFrom != value)
                {
                  OnPeriodFromChanging(ref value);
                  ReportPropertyChanging("PeriodFrom");
                  _PeriodFrom = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodFrom");
                  OnPeriodFromChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodFrom;
        partial void OnGetPeriodFrom(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanged();
    
        /// <summary>
        /// There are no comments for PeriodTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodTo
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodTo;
                OnGetPeriodTo(ref value);
                return value;
            }
            set
            {
                if (_PeriodTo != value)
                {
                  OnPeriodToChanging(ref value);
                  ReportPropertyChanging("PeriodTo");
                  _PeriodTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodTo");
                  OnPeriodToChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodTo;
        partial void OnGetPeriodTo(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "project_user_FK_created_by", "User_CreatedBy")]
        public User User_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_created_by", "User_CreatedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_created_by", "User_CreatedBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_created_by", "User_CreatedBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_created_by", "User_CreatedBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_created_by", "User_CreatedBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_OwnerId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "project_user_FK_owner_id", "User_OwnerId")]
        public User User_OwnerId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_owner_id", "User_OwnerId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_owner_id", "User_OwnerId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_OwnerId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_OwnerIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_owner_id", "User_OwnerId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_owner_id", "User_OwnerId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_user_FK_owner_id", "User_OwnerId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ProjectSettings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "project_setting_project_FK_project_id", "ProjectSettings")]
        public EntityCollection<ProjectSetting> ProjectSettings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProjectSetting>("WProject.BusinessLibrary.project_setting_project_FK_project_id", "ProjectSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProjectSetting>("WProject.BusinessLibrary.project_setting_project_FK_project_id", "ProjectSettings", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Springs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "spring_project_FK_project_id", "Springs")]
        public EntityCollection<Spring> Springs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Spring>("WProject.BusinessLibrary.spring_project_FK_project_id", "Springs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Spring>("WProject.BusinessLibrary.spring_project_FK_project_id", "Springs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.ProjectSetting in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="ProjectSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectSetting : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProjectSetting object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="projectId">Initial value of ProjectId.</param>
        /// <param name="key">Initial value of Key.</param>
        /// <param name="value">Initial value of Value.</param>
        public static ProjectSetting CreateProjectSetting(int id, int projectId, string key, string value)
        {
            ProjectSetting projectSetting = new ProjectSetting();
            projectSetting.Id = id;
            projectSetting.ProjectId = projectId;
            projectSetting.Key = key;
            projectSetting.Value = value;
            return projectSetting;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ProjectId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int ProjectId
        {
            get
            {
                int value = _ProjectId;
                OnGetProjectId(ref value);
                return value;
            }
            set
            {
                if (_ProjectId != value)
                {
                  OnProjectIdChanging(ref value);
                  ReportPropertyChanging("ProjectId");
                  _ProjectId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProjectId");
                  OnProjectIdChanged();
              }
            }
        }
        private int _ProjectId;
        partial void OnGetProjectId(ref int value);
        partial void OnProjectIdChanging(ref int value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// There are no comments for Key in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Key
        {
            get
            {
                string value = _Key;
                OnGetKey(ref value);
                return value;
            }
            set
            {
                if (_Key != value)
                {
                  OnKeyChanging(ref value);
                  ReportPropertyChanging("Key");
                  _Key = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Key");
                  OnKeyChanged();
              }
            }
        }
        private string _Key;
        partial void OnGetKey(ref string value);
        partial void OnKeyChanging(ref string value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// There are no comments for Value in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                string value = _Value;
                OnGetValue(ref value);
                return value;
            }
            set
            {
                if (_Value != value)
                {
                  OnValueChanging(ref value);
                  ReportPropertyChanging("Value");
                  _Value = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Value");
                  OnValueChanged();
              }
            }
        }
        private string _Value;
        partial void OnGetValue(ref string value);
        partial void OnValueChanging(ref string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// There are no comments for LastUpdatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> LastUpdatedAt
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _LastUpdatedAt;
                OnGetLastUpdatedAt(ref value);
                return value;
            }
            set
            {
                if (_LastUpdatedAt != value)
                {
                  OnLastUpdatedAtChanging(ref value);
                  ReportPropertyChanging("LastUpdatedAt");
                  _LastUpdatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastUpdatedAt");
                  OnLastUpdatedAtChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _LastUpdatedAt;
        partial void OnGetLastUpdatedAt(ref global::System.Nullable<System.DateTime> value);
        partial void OnLastUpdatedAtChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnLastUpdatedAtChanged();
    
        /// <summary>
        /// There are no comments for LastUpdatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LastUpdatedBy
        {
            get
            {
                global::System.Nullable<int> value = _LastUpdatedBy;
                OnGetLastUpdatedBy(ref value);
                return value;
            }
            set
            {
                if (_LastUpdatedBy != value)
                {
                  OnLastUpdatedByChanging(ref value);
                  ReportPropertyChanging("LastUpdatedBy");
                  _LastUpdatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastUpdatedBy");
                  OnLastUpdatedByChanged();
              }
            }
        }
        private global::System.Nullable<int> _LastUpdatedBy;
        partial void OnGetLastUpdatedBy(ref global::System.Nullable<int> value);
        partial void OnLastUpdatedByChanging(ref global::System.Nullable<int> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// There are no comments for Comments in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Comments
        {
            get
            {
                string value = _Comments;
                OnGetComments(ref value);
                return value;
            }
            set
            {
                if (_Comments != value)
                {
                  OnCommentsChanging(ref value);
                  ReportPropertyChanging("Comments");
                  _Comments = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Comments");
                  OnCommentsChanged();
              }
            }
        }
        private string _Comments;
        partial void OnGetComments(ref string value);
        partial void OnCommentsChanging(ref string value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Deleted
        {
            get
            {
                global::System.Nullable<bool> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Project in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "project_setting_project_FK_project_id", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("WProject.BusinessLibrary.project_setting_project_FK_project_id", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("WProject.BusinessLibrary.project_setting_project_FK_project_id", "Project").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Project in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("WProject.BusinessLibrary.project_setting_project_FK_project_id", "Project");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Project>("WProject.BusinessLibrary.project_setting_project_FK_project_id", "Project", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("WProject.BusinessLibrary.project_setting_project_FK_project_id", "Project").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "project_setting_user_FK_last_updated_by", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_setting_user_FK_last_updated_by", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_setting_user_FK_last_updated_by", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_setting_user_FK_last_updated_by", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.project_setting_user_FK_last_updated_by", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.project_setting_user_FK_last_updated_by", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.Spring in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="Spring")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Spring : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Spring object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="createdAt">Initial value of CreatedAt.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        /// <param name="ownerId">Initial value of OwnerId.</param>
        /// <param name="projectId">Initial value of ProjectId.</param>
        public static Spring CreateSpring(int id, string name, global::System.DateTime createdAt, int createdBy, int ownerId, int projectId)
        {
            Spring spring = new Spring();
            spring.Id = id;
            spring.Name = name;
            spring.CreatedAt = createdAt;
            spring.CreatedBy = createdBy;
            spring.OwnerId = ownerId;
            spring.ProjectId = projectId;
            return spring;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                global::System.DateTime value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.DateTime value);
        partial void OnCreatedAtChanging(ref global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                int value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private int _CreatedBy;
        partial void OnGetCreatedBy(ref int value);
        partial void OnCreatedByChanging(ref int value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for OwnerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerId
        {
            get
            {
                int value = _OwnerId;
                OnGetOwnerId(ref value);
                return value;
            }
            set
            {
                if (_OwnerId != value)
                {
                  OnOwnerIdChanging(ref value);
                  ReportPropertyChanging("OwnerId");
                  _OwnerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OwnerId");
                  OnOwnerIdChanged();
              }
            }
        }
        private int _OwnerId;
        partial void OnGetOwnerId(ref int value);
        partial void OnOwnerIdChanging(ref int value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// There are no comments for PeriodFrom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodFrom
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodFrom;
                OnGetPeriodFrom(ref value);
                return value;
            }
            set
            {
                if (_PeriodFrom != value)
                {
                  OnPeriodFromChanging(ref value);
                  ReportPropertyChanging("PeriodFrom");
                  _PeriodFrom = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodFrom");
                  OnPeriodFromChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodFrom;
        partial void OnGetPeriodFrom(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanged();
    
        /// <summary>
        /// There are no comments for PeriodTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodTo
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodTo;
                OnGetPeriodTo(ref value);
                return value;
            }
            set
            {
                if (_PeriodTo != value)
                {
                  OnPeriodToChanging(ref value);
                  ReportPropertyChanging("PeriodTo");
                  _PeriodTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodTo");
                  OnPeriodToChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodTo;
        partial void OnGetPeriodTo(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanged();
    
        /// <summary>
        /// There are no comments for ProjectId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int ProjectId
        {
            get
            {
                int value = _ProjectId;
                OnGetProjectId(ref value);
                return value;
            }
            set
            {
                if (_ProjectId != value)
                {
                  OnProjectIdChanging(ref value);
                  ReportPropertyChanging("ProjectId");
                  _ProjectId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProjectId");
                  OnProjectIdChanged();
              }
            }
        }
        private int _ProjectId;
        partial void OnGetProjectId(ref int value);
        partial void OnProjectIdChanging(ref int value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Categories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "category_spring_FK_spring_id", "Categories")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Category>("WProject.BusinessLibrary.category_spring_FK_spring_id", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Category>("WProject.BusinessLibrary.category_spring_FK_spring_id", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Project in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "spring_project_FK_project_id", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("WProject.BusinessLibrary.spring_project_FK_project_id", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("WProject.BusinessLibrary.spring_project_FK_project_id", "Project").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Project in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("WProject.BusinessLibrary.spring_project_FK_project_id", "Project");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Project>("WProject.BusinessLibrary.spring_project_FK_project_id", "Project", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("WProject.BusinessLibrary.spring_project_FK_project_id", "Project").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "spring_user_FK_created_by", "User_CreatedBy")]
        public User User_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_created_by", "User_CreatedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_created_by", "User_CreatedBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_created_by", "User_CreatedBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_created_by", "User_CreatedBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_created_by", "User_CreatedBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_OwnerId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "spring_user_FK_owner_id", "User_OwnerId")]
        public User User_OwnerId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_owner_id", "User_OwnerId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_owner_id", "User_OwnerId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_OwnerId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_OwnerIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_owner_id", "User_OwnerId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_owner_id", "User_OwnerId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.spring_user_FK_owner_id", "User_OwnerId").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.Task in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="createdAt">Initial value of CreatedAt.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        /// <param name="stateId">Initial value of StateId.</param>
        /// <param name="typeId">Initial value of TypeId.</param>
        /// <param name="backlogId">Initial value of BacklogId.</param>
        /// <param name="description">Initial value of Description.</param>
        public static Task CreateTask(int id, string name, global::System.DateTime createdAt, int createdBy, int stateId, int typeId, int backlogId, string description)
        {
            Task task = new Task();
            task.Id = id;
            task.Name = name;
            task.CreatedAt = createdAt;
            task.CreatedBy = createdBy;
            task.StateId = stateId;
            task.TypeId = typeId;
            task.BacklogId = backlogId;
            task.Description = description;
            return task;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                global::System.DateTime value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.DateTime value);
        partial void OnCreatedAtChanging(ref global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                int value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private int _CreatedBy;
        partial void OnGetCreatedBy(ref int value);
        partial void OnCreatedByChanging(ref int value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for AssignedTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> AssignedTo
        {
            get
            {
                global::System.Nullable<int> value = _AssignedTo;
                OnGetAssignedTo(ref value);
                return value;
            }
            set
            {
                if (_AssignedTo != value)
                {
                  OnAssignedToChanging(ref value);
                  ReportPropertyChanging("AssignedTo");
                  _AssignedTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AssignedTo");
                  OnAssignedToChanged();
              }
            }
        }
        private global::System.Nullable<int> _AssignedTo;
        partial void OnGetAssignedTo(ref global::System.Nullable<int> value);
        partial void OnAssignedToChanging(ref global::System.Nullable<int> value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// There are no comments for StateId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int StateId
        {
            get
            {
                int value = _StateId;
                OnGetStateId(ref value);
                return value;
            }
            set
            {
                if (_StateId != value)
                {
                  OnStateIdChanging(ref value);
                  ReportPropertyChanging("StateId");
                  _StateId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StateId");
                  OnStateIdChanged();
              }
            }
        }
        private int _StateId;
        partial void OnGetStateId(ref int value);
        partial void OnStateIdChanging(ref int value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// There are no comments for TypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int TypeId
        {
            get
            {
                int value = _TypeId;
                OnGetTypeId(ref value);
                return value;
            }
            set
            {
                if (_TypeId != value)
                {
                  OnTypeIdChanging(ref value);
                  ReportPropertyChanging("TypeId");
                  _TypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TypeId");
                  OnTypeIdChanged();
              }
            }
        }
        private int _TypeId;
        partial void OnGetTypeId(ref int value);
        partial void OnTypeIdChanging(ref int value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// There are no comments for StageId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> StageId
        {
            get
            {
                global::System.Nullable<int> value = _StageId;
                OnGetStageId(ref value);
                return value;
            }
            set
            {
                if (_StageId != value)
                {
                  OnStageIdChanging(ref value);
                  ReportPropertyChanging("StageId");
                  _StageId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StageId");
                  OnStageIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _StageId;
        partial void OnGetStageId(ref global::System.Nullable<int> value);
        partial void OnStageIdChanging(ref global::System.Nullable<int> value);
        partial void OnStageIdChanged();
    
        /// <summary>
        /// There are no comments for BacklogId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int BacklogId
        {
            get
            {
                int value = _BacklogId;
                OnGetBacklogId(ref value);
                return value;
            }
            set
            {
                if (_BacklogId != value)
                {
                  OnBacklogIdChanging(ref value);
                  ReportPropertyChanging("BacklogId");
                  _BacklogId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BacklogId");
                  OnBacklogIdChanged();
              }
            }
        }
        private int _BacklogId;
        partial void OnGetBacklogId(ref int value);
        partial void OnBacklogIdChanging(ref int value);
        partial void OnBacklogIdChanged();
    
        /// <summary>
        /// There are no comments for Priority in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Priority
        {
            get
            {
                global::System.Nullable<int> value = _Priority;
                OnGetPriority(ref value);
                return value;
            }
            set
            {
                if (_Priority != value)
                {
                  OnPriorityChanging(ref value);
                  ReportPropertyChanging("Priority");
                  _Priority = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Priority");
                  OnPriorityChanged();
              }
            }
        }
        private global::System.Nullable<int> _Priority;
        partial void OnGetPriority(ref global::System.Nullable<int> value);
        partial void OnPriorityChanging(ref global::System.Nullable<int> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// There are no comments for PeriodFrom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodFrom
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodFrom;
                OnGetPeriodFrom(ref value);
                return value;
            }
            set
            {
                if (_PeriodFrom != value)
                {
                  OnPeriodFromChanging(ref value);
                  ReportPropertyChanging("PeriodFrom");
                  _PeriodFrom = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodFrom");
                  OnPeriodFromChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodFrom;
        partial void OnGetPeriodFrom(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodFromChanged();
    
        /// <summary>
        /// There are no comments for PeriodTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> PeriodTo
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _PeriodTo;
                OnGetPeriodTo(ref value);
                return value;
            }
            set
            {
                if (_PeriodTo != value)
                {
                  OnPeriodToChanging(ref value);
                  ReportPropertyChanging("PeriodTo");
                  _PeriodTo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PeriodTo");
                  OnPeriodToChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _PeriodTo;
        partial void OnGetPeriodTo(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnPeriodToChanged();
    
        /// <summary>
        /// in minutes
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> RemainingWork
        {
            get
            {
                global::System.Nullable<int> value = _RemainingWork;
                OnGetRemainingWork(ref value);
                return value;
            }
            set
            {
                if (_RemainingWork != value)
                {
                  OnRemainingWorkChanging(ref value);
                  ReportPropertyChanging("RemainingWork");
                  _RemainingWork = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RemainingWork");
                  OnRemainingWorkChanged();
              }
            }
        }
        private global::System.Nullable<int> _RemainingWork;
        partial void OnGetRemainingWork(ref global::System.Nullable<int> value);
        partial void OnRemainingWorkChanging(ref global::System.Nullable<int> value);
        partial void OnRemainingWorkChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Backlog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_backlog_FK_backlog_id", "Backlog")]
        public Backlog Backlog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Backlog>("WProject.BusinessLibrary.task_backlog_FK_backlog_id", "Backlog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Backlog>("WProject.BusinessLibrary.task_backlog_FK_backlog_id", "Backlog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Backlog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Backlog> BacklogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Backlog>("WProject.BusinessLibrary.task_backlog_FK_backlog_id", "Backlog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Backlog>("WProject.BusinessLibrary.task_backlog_FK_backlog_id", "Backlog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Backlog>("WProject.BusinessLibrary.task_backlog_FK_backlog_id", "Backlog").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_StageId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dict_item_FK_stage_id", "DictItem_StageId")]
        public DictItem DictItem_StageId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_stage_id", "DictItem_StageId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_stage_id", "DictItem_StageId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_StageId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_StageIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_stage_id", "DictItem_StageId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_stage_id", "DictItem_StageId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_stage_id", "DictItem_StageId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_StateId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dict_item_FK_state_id", "DictItem_StateId")]
        public DictItem DictItem_StateId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_state_id", "DictItem_StateId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_state_id", "DictItem_StateId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_StateId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_StateIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_state_id", "DictItem_StateId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_state_id", "DictItem_StateId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_state_id", "DictItem_StateId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_TypeId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dict_item_FK_type_id", "DictItem_TypeId")]
        public DictItem DictItem_TypeId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_type_id", "DictItem_TypeId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_type_id", "DictItem_TypeId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_TypeId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_TypeIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_type_id", "DictItem_TypeId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_type_id", "DictItem_TypeId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dict_item_FK_type_id", "DictItem_TypeId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_AssignedTo in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_user_FK_assigned_to", "User_AssignedTo")]
        public User User_AssignedTo
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_assigned_to", "User_AssignedTo").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_assigned_to", "User_AssignedTo").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_AssignedTo in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_AssignedToReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_assigned_to", "User_AssignedTo");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_assigned_to", "User_AssignedTo", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_assigned_to", "User_AssignedTo").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_user_FK_created_by", "User_CreatedBy")]
        public User User_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_created_by", "User_CreatedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_created_by", "User_CreatedBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_CreatedBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_created_by", "User_CreatedBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_created_by", "User_CreatedBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_user_FK_created_by", "User_CreatedBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskAttachements in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_attachement_task_FK_task_id", "TaskAttachements")]
        public EntityCollection<TaskAttachement> TaskAttachements
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskAttachement>("WProject.BusinessLibrary.task_attachement_task_FK_task_id", "TaskAttachements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskAttachement>("WProject.BusinessLibrary.task_attachement_task_FK_task_id", "TaskAttachements", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskDependencies_TaskDependentId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_task_FK_task_dependent_id", "TaskDependencies_TaskDependentId")]
        public EntityCollection<TaskDependency> TaskDependencies_TaskDependentId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_task_FK_task_dependent_id", "TaskDependencies_TaskDependentId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_task_FK_task_dependent_id", "TaskDependencies_TaskDependentId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskDependencies_TaskId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_task_FK_task_id", "TaskDependencies_TaskId")]
        public EntityCollection<TaskDependency> TaskDependencies_TaskId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_task_FK_task_id", "TaskDependencies_TaskId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_task_FK_task_id", "TaskDependencies_TaskId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskHistories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_history_task_FK_task_id", "TaskHistories")]
        public EntityCollection<TaskHistory> TaskHistories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskHistory>("WProject.BusinessLibrary.task_history_task_FK_task_id", "TaskHistories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskHistory>("WProject.BusinessLibrary.task_history_task_FK_task_id", "TaskHistories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskTags in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_tag_task_FK_task_id", "TaskTags")]
        public EntityCollection<TaskTag> TaskTags
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskTag>("WProject.BusinessLibrary.task_tag_task_FK_task_id", "TaskTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskTag>("WProject.BusinessLibrary.task_tag_task_FK_task_id", "TaskTags", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.TaskAttachement in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="TaskAttachement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAttachement : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new TaskAttachement object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="taskId">Initial value of TaskId.</param>
        /// <param name="fileId">Initial value of FileId.</param>
        /// <param name="attachedAt">Initial value of AttachedAt.</param>
        /// <param name="attachedBy">Initial value of AttachedBy.</param>
        public static TaskAttachement CreateTaskAttachement(int id, int taskId, int fileId, global::System.DateTime attachedAt, int attachedBy)
        {
            TaskAttachement taskAttachement = new TaskAttachement();
            taskAttachement.Id = id;
            taskAttachement.TaskId = taskId;
            taskAttachement.FileId = fileId;
            taskAttachement.AttachedAt = attachedAt;
            taskAttachement.AttachedBy = attachedBy;
            return taskAttachement;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for TaskId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int TaskId
        {
            get
            {
                int value = _TaskId;
                OnGetTaskId(ref value);
                return value;
            }
            set
            {
                if (_TaskId != value)
                {
                  OnTaskIdChanging(ref value);
                  ReportPropertyChanging("TaskId");
                  _TaskId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskId");
                  OnTaskIdChanged();
              }
            }
        }
        private int _TaskId;
        partial void OnGetTaskId(ref int value);
        partial void OnTaskIdChanging(ref int value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// There are no comments for FileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int FileId
        {
            get
            {
                int value = _FileId;
                OnGetFileId(ref value);
                return value;
            }
            set
            {
                if (_FileId != value)
                {
                  OnFileIdChanging(ref value);
                  ReportPropertyChanging("FileId");
                  _FileId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FileId");
                  OnFileIdChanged();
              }
            }
        }
        private int _FileId;
        partial void OnGetFileId(ref int value);
        partial void OnFileIdChanging(ref int value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// There are no comments for AttachedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AttachedAt
        {
            get
            {
                global::System.DateTime value = _AttachedAt;
                OnGetAttachedAt(ref value);
                return value;
            }
            set
            {
                if (_AttachedAt != value)
                {
                  OnAttachedAtChanging(ref value);
                  ReportPropertyChanging("AttachedAt");
                  _AttachedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AttachedAt");
                  OnAttachedAtChanged();
              }
            }
        }
        private global::System.DateTime _AttachedAt;
        partial void OnGetAttachedAt(ref global::System.DateTime value);
        partial void OnAttachedAtChanging(ref global::System.DateTime value);
        partial void OnAttachedAtChanged();
    
        /// <summary>
        /// There are no comments for AttachedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int AttachedBy
        {
            get
            {
                int value = _AttachedBy;
                OnGetAttachedBy(ref value);
                return value;
            }
            set
            {
                if (_AttachedBy != value)
                {
                  OnAttachedByChanging(ref value);
                  ReportPropertyChanging("AttachedBy");
                  _AttachedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AttachedBy");
                  OnAttachedByChanged();
              }
            }
        }
        private int _AttachedBy;
        partial void OnGetAttachedBy(ref int value);
        partial void OnAttachedByChanging(ref int value);
        partial void OnAttachedByChanged();
    
        /// <summary>
        /// There are no comments for Comments in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Comments
        {
            get
            {
                string value = _Comments;
                OnGetComments(ref value);
                return value;
            }
            set
            {
                if (_Comments != value)
                {
                  OnCommentsChanging(ref value);
                  ReportPropertyChanging("Comments");
                  _Comments = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Comments");
                  OnCommentsChanged();
              }
            }
        }
        private string _Comments;
        partial void OnGetComments(ref string value);
        partial void OnCommentsChanging(ref string value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for File in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_attachement_file_FK_file_id", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<File>("WProject.BusinessLibrary.task_attachement_file_FK_file_id", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<File>("WProject.BusinessLibrary.task_attachement_file_FK_file_id", "File").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for File in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<File>("WProject.BusinessLibrary.task_attachement_file_FK_file_id", "File");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<File>("WProject.BusinessLibrary.task_attachement_file_FK_file_id", "File", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<File>("WProject.BusinessLibrary.task_attachement_file_FK_file_id", "File").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Task in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_attachement_task_FK_task_id", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_attachement_task_FK_task_id", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_attachement_task_FK_task_id", "Task").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Task in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_attachement_task_FK_task_id", "Task");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Task>("WProject.BusinessLibrary.task_attachement_task_FK_task_id", "Task", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_attachement_task_FK_task_id", "Task").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_attachement_user_FK_attached_by", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_attachement_user_FK_attached_by", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_attachement_user_FK_attached_by", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_attachement_user_FK_attached_by", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.task_attachement_user_FK_attached_by", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_attachement_user_FK_attached_by", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.TaskDependency in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="TaskDependency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskDependency : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new TaskDependency object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="taskId">Initial value of TaskId.</param>
        /// <param name="taskDependentId">Initial value of TaskDependentId.</param>
        /// <param name="createdAt">Initial value of CreatedAt.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        public static TaskDependency CreateTaskDependency(int id, int taskId, int taskDependentId, global::System.DateTime createdAt, int createdBy)
        {
            TaskDependency taskDependency = new TaskDependency();
            taskDependency.Id = id;
            taskDependency.TaskId = taskId;
            taskDependency.TaskDependentId = taskDependentId;
            taskDependency.CreatedAt = createdAt;
            taskDependency.CreatedBy = createdBy;
            return taskDependency;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for TaskId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int TaskId
        {
            get
            {
                int value = _TaskId;
                OnGetTaskId(ref value);
                return value;
            }
            set
            {
                if (_TaskId != value)
                {
                  OnTaskIdChanging(ref value);
                  ReportPropertyChanging("TaskId");
                  _TaskId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskId");
                  OnTaskIdChanged();
              }
            }
        }
        private int _TaskId;
        partial void OnGetTaskId(ref int value);
        partial void OnTaskIdChanging(ref int value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// There are no comments for TaskDependentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int TaskDependentId
        {
            get
            {
                int value = _TaskDependentId;
                OnGetTaskDependentId(ref value);
                return value;
            }
            set
            {
                if (_TaskDependentId != value)
                {
                  OnTaskDependentIdChanging(ref value);
                  ReportPropertyChanging("TaskDependentId");
                  _TaskDependentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskDependentId");
                  OnTaskDependentIdChanged();
              }
            }
        }
        private int _TaskDependentId;
        partial void OnGetTaskDependentId(ref int value);
        partial void OnTaskDependentIdChanging(ref int value);
        partial void OnTaskDependentIdChanged();
    
        /// <summary>
        /// There are no comments for DependentStateId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> DependentStateId
        {
            get
            {
                global::System.Nullable<int> value = _DependentStateId;
                OnGetDependentStateId(ref value);
                return value;
            }
            set
            {
                if (_DependentStateId != value)
                {
                  OnDependentStateIdChanging(ref value);
                  ReportPropertyChanging("DependentStateId");
                  _DependentStateId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DependentStateId");
                  OnDependentStateIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _DependentStateId;
        partial void OnGetDependentStateId(ref global::System.Nullable<int> value);
        partial void OnDependentStateIdChanging(ref global::System.Nullable<int> value);
        partial void OnDependentStateIdChanged();
    
        /// <summary>
        /// There are no comments for DependentStageId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> DependentStageId
        {
            get
            {
                global::System.Nullable<int> value = _DependentStageId;
                OnGetDependentStageId(ref value);
                return value;
            }
            set
            {
                if (_DependentStageId != value)
                {
                  OnDependentStageIdChanging(ref value);
                  ReportPropertyChanging("DependentStageId");
                  _DependentStageId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DependentStageId");
                  OnDependentStageIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _DependentStageId;
        partial void OnGetDependentStageId(ref global::System.Nullable<int> value);
        partial void OnDependentStageIdChanging(ref global::System.Nullable<int> value);
        partial void OnDependentStageIdChanged();
    
        /// <summary>
        /// There are no comments for BlockOnStateId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> BlockOnStateId
        {
            get
            {
                global::System.Nullable<int> value = _BlockOnStateId;
                OnGetBlockOnStateId(ref value);
                return value;
            }
            set
            {
                if (_BlockOnStateId != value)
                {
                  OnBlockOnStateIdChanging(ref value);
                  ReportPropertyChanging("BlockOnStateId");
                  _BlockOnStateId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BlockOnStateId");
                  OnBlockOnStateIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _BlockOnStateId;
        partial void OnGetBlockOnStateId(ref global::System.Nullable<int> value);
        partial void OnBlockOnStateIdChanging(ref global::System.Nullable<int> value);
        partial void OnBlockOnStateIdChanged();
    
        /// <summary>
        /// There are no comments for BlockOnStageId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> BlockOnStageId
        {
            get
            {
                global::System.Nullable<int> value = _BlockOnStageId;
                OnGetBlockOnStageId(ref value);
                return value;
            }
            set
            {
                if (_BlockOnStageId != value)
                {
                  OnBlockOnStageIdChanging(ref value);
                  ReportPropertyChanging("BlockOnStageId");
                  _BlockOnStageId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BlockOnStageId");
                  OnBlockOnStageIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _BlockOnStageId;
        partial void OnGetBlockOnStageId(ref global::System.Nullable<int> value);
        partial void OnBlockOnStageIdChanging(ref global::System.Nullable<int> value);
        partial void OnBlockOnStageIdChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                global::System.DateTime value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.DateTime value);
        partial void OnCreatedAtChanging(ref global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                int value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private int _CreatedBy;
        partial void OnGetCreatedBy(ref int value);
        partial void OnCreatedByChanging(ref int value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for Comments in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Comments
        {
            get
            {
                string value = _Comments;
                OnGetComments(ref value);
                return value;
            }
            set
            {
                if (_Comments != value)
                {
                  OnCommentsChanging(ref value);
                  ReportPropertyChanging("Comments");
                  _Comments = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Comments");
                  OnCommentsChanged();
              }
            }
        }
        private string _Comments;
        partial void OnGetComments(ref string value);
        partial void OnCommentsChanging(ref string value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for DictItem_BlockOnStageId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_block_on_stage_id", "DictItem_BlockOnStageId")]
        public DictItem DictItem_BlockOnStageId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_stage_id", "DictItem_BlockOnStageId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_stage_id", "DictItem_BlockOnStageId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_BlockOnStageId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_BlockOnStageIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_stage_id", "DictItem_BlockOnStageId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_stage_id", "DictItem_BlockOnStageId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_stage_id", "DictItem_BlockOnStageId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_BlockOnStateId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_block_on_state_id", "DictItem_BlockOnStateId")]
        public DictItem DictItem_BlockOnStateId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_state_id", "DictItem_BlockOnStateId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_state_id", "DictItem_BlockOnStateId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_BlockOnStateId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_BlockOnStateIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_state_id", "DictItem_BlockOnStateId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_state_id", "DictItem_BlockOnStateId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_block_on_state_id", "DictItem_BlockOnStateId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_DependentStageId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_dependent_stage_id", "DictItem_DependentStageId")]
        public DictItem DictItem_DependentStageId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_stage_id", "DictItem_DependentStageId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_stage_id", "DictItem_DependentStageId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_DependentStageId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_DependentStageIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_stage_id", "DictItem_DependentStageId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_stage_id", "DictItem_DependentStageId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_stage_id", "DictItem_DependentStageId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_DependentStateId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_dict_item_FK_dependent_state_id", "DictItem_DependentStateId")]
        public DictItem DictItem_DependentStateId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_state_id", "DictItem_DependentStateId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_state_id", "DictItem_DependentStateId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DictItem_DependentStateId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DictItem> DictItem_DependentStateIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_state_id", "DictItem_DependentStateId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_state_id", "DictItem_DependentStateId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DictItem>("WProject.BusinessLibrary.task_dependency_dict_item_FK_dependent_state_id", "DictItem_DependentStateId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Task_TaskDependentId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_task_FK_task_dependent_id", "Task_TaskDependentId")]
        public Task Task_TaskDependentId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_dependent_id", "Task_TaskDependentId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_dependent_id", "Task_TaskDependentId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Task_TaskDependentId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> Task_TaskDependentIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_dependent_id", "Task_TaskDependentId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_dependent_id", "Task_TaskDependentId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_dependent_id", "Task_TaskDependentId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Task_TaskId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_task_FK_task_id", "Task_TaskId")]
        public Task Task_TaskId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_id", "Task_TaskId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_id", "Task_TaskId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Task_TaskId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> Task_TaskIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_id", "Task_TaskId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_id", "Task_TaskId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_dependency_task_FK_task_id", "Task_TaskId").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_users_FK_created_by", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_dependency_users_FK_created_by", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_dependency_users_FK_created_by", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_dependency_users_FK_created_by", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.task_dependency_users_FK_created_by", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_dependency_users_FK_created_by", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.TaskHistory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="TaskHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskHistory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new TaskHistory object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="taskId">Initial value of TaskId.</param>
        /// <param name="updatedAt">Initial value of UpdatedAt.</param>
        /// <param name="updatedBy">Initial value of UpdatedBy.</param>
        /// <param name="fieldName">Initial value of FieldName.</param>
        /// <param name="fieldNewValue">Initial value of FieldNewValue.</param>
        public static TaskHistory CreateTaskHistory(int id, int taskId, global::System.DateTime updatedAt, int updatedBy, string fieldName, string fieldNewValue)
        {
            TaskHistory taskHistory = new TaskHistory();
            taskHistory.Id = id;
            taskHistory.TaskId = taskId;
            taskHistory.UpdatedAt = updatedAt;
            taskHistory.UpdatedBy = updatedBy;
            taskHistory.FieldName = fieldName;
            taskHistory.FieldNewValue = fieldNewValue;
            return taskHistory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for TaskId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int TaskId
        {
            get
            {
                int value = _TaskId;
                OnGetTaskId(ref value);
                return value;
            }
            set
            {
                if (_TaskId != value)
                {
                  OnTaskIdChanging(ref value);
                  ReportPropertyChanging("TaskId");
                  _TaskId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskId");
                  OnTaskIdChanged();
              }
            }
        }
        private int _TaskId;
        partial void OnGetTaskId(ref int value);
        partial void OnTaskIdChanging(ref int value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// There are no comments for UpdatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedAt
        {
            get
            {
                global::System.DateTime value = _UpdatedAt;
                OnGetUpdatedAt(ref value);
                return value;
            }
            set
            {
                if (_UpdatedAt != value)
                {
                  OnUpdatedAtChanging(ref value);
                  ReportPropertyChanging("UpdatedAt");
                  _UpdatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdatedAt");
                  OnUpdatedAtChanged();
              }
            }
        }
        private global::System.DateTime _UpdatedAt;
        partial void OnGetUpdatedAt(ref global::System.DateTime value);
        partial void OnUpdatedAtChanging(ref global::System.DateTime value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// There are no comments for UpdatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int UpdatedBy
        {
            get
            {
                int value = _UpdatedBy;
                OnGetUpdatedBy(ref value);
                return value;
            }
            set
            {
                if (_UpdatedBy != value)
                {
                  OnUpdatedByChanging(ref value);
                  ReportPropertyChanging("UpdatedBy");
                  _UpdatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdatedBy");
                  OnUpdatedByChanged();
              }
            }
        }
        private int _UpdatedBy;
        partial void OnGetUpdatedBy(ref int value);
        partial void OnUpdatedByChanging(ref int value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// There are no comments for FieldName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string FieldName
        {
            get
            {
                string value = _FieldName;
                OnGetFieldName(ref value);
                return value;
            }
            set
            {
                if (_FieldName != value)
                {
                  OnFieldNameChanging(ref value);
                  ReportPropertyChanging("FieldName");
                  _FieldName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FieldName");
                  OnFieldNameChanged();
              }
            }
        }
        private string _FieldName;
        partial void OnGetFieldName(ref string value);
        partial void OnFieldNameChanging(ref string value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// There are no comments for FieldOldValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string FieldOldValue
        {
            get
            {
                string value = _FieldOldValue;
                OnGetFieldOldValue(ref value);
                return value;
            }
            set
            {
                if (_FieldOldValue != value)
                {
                  OnFieldOldValueChanging(ref value);
                  ReportPropertyChanging("FieldOldValue");
                  _FieldOldValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FieldOldValue");
                  OnFieldOldValueChanged();
              }
            }
        }
        private string _FieldOldValue;
        partial void OnGetFieldOldValue(ref string value);
        partial void OnFieldOldValueChanging(ref string value);
        partial void OnFieldOldValueChanged();
    
        /// <summary>
        /// There are no comments for FieldNewValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string FieldNewValue
        {
            get
            {
                string value = _FieldNewValue;
                OnGetFieldNewValue(ref value);
                return value;
            }
            set
            {
                if (_FieldNewValue != value)
                {
                  OnFieldNewValueChanging(ref value);
                  ReportPropertyChanging("FieldNewValue");
                  _FieldNewValue = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FieldNewValue");
                  OnFieldNewValueChanged();
              }
            }
        }
        private string _FieldNewValue;
        partial void OnGetFieldNewValue(ref string value);
        partial void OnFieldNewValueChanging(ref string value);
        partial void OnFieldNewValueChanged();
    
        /// <summary>
        /// There are no comments for Comments in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Comments
        {
            get
            {
                string value = _Comments;
                OnGetComments(ref value);
                return value;
            }
            set
            {
                if (_Comments != value)
                {
                  OnCommentsChanging(ref value);
                  ReportPropertyChanging("Comments");
                  _Comments = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Comments");
                  OnCommentsChanged();
              }
            }
        }
        private string _Comments;
        partial void OnGetComments(ref string value);
        partial void OnCommentsChanging(ref string value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Deleted
        {
            get
            {
                global::System.Nullable<bool> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Task in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_history_task_FK_task_id", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_history_task_FK_task_id", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_history_task_FK_task_id", "Task").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Task in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_history_task_FK_task_id", "Task");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Task>("WProject.BusinessLibrary.task_history_task_FK_task_id", "Task", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_history_task_FK_task_id", "Task").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_history_user_FK_updated_by", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_history_user_FK_updated_by", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_history_user_FK_updated_by", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_history_user_FK_updated_by", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.task_history_user_FK_updated_by", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_history_user_FK_updated_by", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.TaskTag in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="TaskTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskTag : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new TaskTag object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="taskId">Initial value of TaskId.</param>
        /// <param name="text">Initial value of Text.</param>
        /// <param name="createdAt">Initial value of CreatedAt.</param>
        /// <param name="createdBy">Initial value of CreatedBy.</param>
        public static TaskTag CreateTaskTag(int id, int taskId, string text, global::System.DateTime createdAt, int createdBy)
        {
            TaskTag taskTag = new TaskTag();
            taskTag.Id = id;
            taskTag.TaskId = taskId;
            taskTag.Text = text;
            taskTag.CreatedAt = createdAt;
            taskTag.CreatedBy = createdBy;
            return taskTag;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for TaskId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int TaskId
        {
            get
            {
                int value = _TaskId;
                OnGetTaskId(ref value);
                return value;
            }
            set
            {
                if (_TaskId != value)
                {
                  OnTaskIdChanging(ref value);
                  ReportPropertyChanging("TaskId");
                  _TaskId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskId");
                  OnTaskIdChanged();
              }
            }
        }
        private int _TaskId;
        partial void OnGetTaskId(ref int value);
        partial void OnTaskIdChanging(ref int value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// There are no comments for Text in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                string value = _Text;
                OnGetText(ref value);
                return value;
            }
            set
            {
                if (_Text != value)
                {
                  OnTextChanging(ref value);
                  ReportPropertyChanging("Text");
                  _Text = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Text");
                  OnTextChanged();
              }
            }
        }
        private string _Text;
        partial void OnGetText(ref string value);
        partial void OnTextChanging(ref string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// There are no comments for CreatedAt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                global::System.DateTime value = _CreatedAt;
                OnGetCreatedAt(ref value);
                return value;
            }
            set
            {
                if (_CreatedAt != value)
                {
                  OnCreatedAtChanging(ref value);
                  ReportPropertyChanging("CreatedAt");
                  _CreatedAt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedAt");
                  OnCreatedAtChanged();
              }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnGetCreatedAt(ref global::System.DateTime value);
        partial void OnCreatedAtChanging(ref global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// There are no comments for CreatedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                int value = _CreatedBy;
                OnGetCreatedBy(ref value);
                return value;
            }
            set
            {
                if (_CreatedBy != value)
                {
                  OnCreatedByChanging(ref value);
                  ReportPropertyChanging("CreatedBy");
                  _CreatedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatedBy");
                  OnCreatedByChanged();
              }
            }
        }
        private int _CreatedBy;
        partial void OnGetCreatedBy(ref int value);
        partial void OnCreatedByChanging(ref int value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Task in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_tag_task_FK_task_id", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_tag_task_FK_task_id", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_tag_task_FK_task_id", "Task").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Task in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_tag_task_FK_task_id", "Task");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Task>("WProject.BusinessLibrary.task_tag_task_FK_task_id", "Task", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("WProject.BusinessLibrary.task_tag_task_FK_task_id", "Task").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_tag_user_FK_created_by", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_tag_user_FK_created_by", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_tag_user_FK_created_by", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_tag_user_FK_created_by", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.task_tag_user_FK_created_by", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.task_tag_user_FK_created_by", "User").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.User in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="login">Initial value of Login.</param>
        /// <param name="word">Initial value of Word.</param>
        public static User CreateUser(int id, string name, string login, string word)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.Login = login;
            user.Word = word;
            return user;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Login in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Login
        {
            get
            {
                string value = _Login;
                OnGetLogin(ref value);
                return value;
            }
            set
            {
                if (_Login != value)
                {
                  OnLoginChanging(ref value);
                  ReportPropertyChanging("Login");
                  _Login = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Login");
                  OnLoginChanged();
              }
            }
        }
        private string _Login;
        partial void OnGetLogin(ref string value);
        partial void OnLoginChanging(ref string value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// There are no comments for Word in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Word
        {
            get
            {
                string value = _Word;
                OnGetWord(ref value);
                return value;
            }
            set
            {
                if (_Word != value)
                {
                  OnWordChanging(ref value);
                  ReportPropertyChanging("Word");
                  _Word = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Word");
                  OnWordChanged();
              }
            }
        }
        private string _Word;
        partial void OnGetWord(ref string value);
        partial void OnWordChanging(ref string value);
        partial void OnWordChanged();
    
        /// <summary>
        /// There are no comments for Expire in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> Expire
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Expire;
                OnGetExpire(ref value);
                return value;
            }
            set
            {
                if (_Expire != value)
                {
                  OnExpireChanging(ref value);
                  ReportPropertyChanging("Expire");
                  _Expire = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Expire");
                  OnExpireChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Expire;
        partial void OnGetExpire(ref global::System.Nullable<System.DateTime> value);
        partial void OnExpireChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnExpireChanged();
    
        /// <summary>
        /// There are no comments for Su in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Su
        {
            get
            {
                global::System.Nullable<sbyte> value = _Su;
                OnGetSu(ref value);
                return value;
            }
            set
            {
                if (_Su != value)
                {
                  OnSuChanging(ref value);
                  ReportPropertyChanging("Su");
                  _Su = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Su");
                  OnSuChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Su;
        partial void OnGetSu(ref global::System.Nullable<sbyte> value);
        partial void OnSuChanging(ref global::System.Nullable<sbyte> value);
        partial void OnSuChanged();
    
        /// <summary>
        /// There are no comments for Suspended in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Suspended
        {
            get
            {
                global::System.Nullable<bool> value = _Suspended;
                OnGetSuspended(ref value);
                return value;
            }
            set
            {
                if (_Suspended != value)
                {
                  OnSuspendedChanging(ref value);
                  ReportPropertyChanging("Suspended");
                  _Suspended = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Suspended");
                  OnSuspendedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Suspended;
        partial void OnGetSuspended(ref global::System.Nullable<bool> value);
        partial void OnSuspendedChanging(ref global::System.Nullable<bool> value);
        partial void OnSuspendedChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Deleted
        {
            get
            {
                global::System.Nullable<bool> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Accesses_AccessGrantedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "access_object_user_FK_access_granted_by", "Accesses_AccessGrantedBy")]
        public EntityCollection<Access> Accesses_AccessGrantedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Access>("WProject.BusinessLibrary.access_object_user_FK_access_granted_by", "Accesses_AccessGrantedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Access>("WProject.BusinessLibrary.access_object_user_FK_access_granted_by", "Accesses_AccessGrantedBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Accesses_UserId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "access_object_user_FK_user_id", "Accesses_UserId")]
        public EntityCollection<Access> Accesses_UserId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Access>("WProject.BusinessLibrary.access_object_user_FK_user_id", "Accesses_UserId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Access>("WProject.BusinessLibrary.access_object_user_FK_user_id", "Accesses_UserId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ActiveSessions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "active_session_user_FK_user_id", "ActiveSessions")]
        public EntityCollection<ActiveSession> ActiveSessions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ActiveSession>("WProject.BusinessLibrary.active_session_user_FK_user_id", "ActiveSessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ActiveSession>("WProject.BusinessLibrary.active_session_user_FK_user_id", "ActiveSessions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AppSettings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "app_setting_user_FK_last_updated_by", "AppSettings")]
        public EntityCollection<AppSetting> AppSettings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AppSetting>("WProject.BusinessLibrary.app_setting_user_FK_last_updated_by", "AppSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AppSetting>("WProject.BusinessLibrary.app_setting_user_FK_last_updated_by", "AppSettings", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Backlogs_AssignedTo in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_user_FK_assigned_to", "Backlogs_AssignedTo")]
        public EntityCollection<Backlog> Backlogs_AssignedTo
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_user_FK_assigned_to", "Backlogs_AssignedTo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_user_FK_assigned_to", "Backlogs_AssignedTo", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Backlogs_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "backlog_user_FK_created_by", "Backlogs_CreatedBy")]
        public EntityCollection<Backlog> Backlogs_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_user_FK_created_by", "Backlogs_CreatedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Backlog>("WProject.BusinessLibrary.backlog_user_FK_created_by", "Backlogs_CreatedBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Categories_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "category_user_FK_created_by", "Categories_CreatedBy")]
        public EntityCollection<Category> Categories_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Category>("WProject.BusinessLibrary.category_user_FK_created_by", "Categories_CreatedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Category>("WProject.BusinessLibrary.category_user_FK_created_by", "Categories_CreatedBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Categories_OwnerId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "category_user_FK_owner_id", "Categories_OwnerId")]
        public EntityCollection<Category> Categories_OwnerId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Category>("WProject.BusinessLibrary.category_user_FK_owner_id", "Categories_OwnerId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Category>("WProject.BusinessLibrary.category_user_FK_owner_id", "Categories_OwnerId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Files in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "file_user_FK_created_by", "Files")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<File>("WProject.BusinessLibrary.file_user_FK_created_by", "Files");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<File>("WProject.BusinessLibrary.file_user_FK_created_by", "Files", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Groups in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "group_user_FK_owner_id", "Groups")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Group>("WProject.BusinessLibrary.group_user_FK_owner_id", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Group>("WProject.BusinessLibrary.group_user_FK_owner_id", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Logs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "log_user_FK_user_id", "Logs")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Log>("WProject.BusinessLibrary.log_user_FK_user_id", "Logs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Log>("WProject.BusinessLibrary.log_user_FK_user_id", "Logs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Projects_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "project_user_FK_created_by", "Projects_CreatedBy")]
        public EntityCollection<Project> Projects_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Project>("WProject.BusinessLibrary.project_user_FK_created_by", "Projects_CreatedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Project>("WProject.BusinessLibrary.project_user_FK_created_by", "Projects_CreatedBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Projects_OwnerId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "project_user_FK_owner_id", "Projects_OwnerId")]
        public EntityCollection<Project> Projects_OwnerId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Project>("WProject.BusinessLibrary.project_user_FK_owner_id", "Projects_OwnerId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Project>("WProject.BusinessLibrary.project_user_FK_owner_id", "Projects_OwnerId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ProjectSettings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "project_setting_user_FK_last_updated_by", "ProjectSettings")]
        public EntityCollection<ProjectSetting> ProjectSettings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProjectSetting>("WProject.BusinessLibrary.project_setting_user_FK_last_updated_by", "ProjectSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProjectSetting>("WProject.BusinessLibrary.project_setting_user_FK_last_updated_by", "ProjectSettings", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Springs_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "spring_user_FK_created_by", "Springs_CreatedBy")]
        public EntityCollection<Spring> Springs_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Spring>("WProject.BusinessLibrary.spring_user_FK_created_by", "Springs_CreatedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Spring>("WProject.BusinessLibrary.spring_user_FK_created_by", "Springs_CreatedBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Springs_OwnerId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "spring_user_FK_owner_id", "Springs_OwnerId")]
        public EntityCollection<Spring> Springs_OwnerId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Spring>("WProject.BusinessLibrary.spring_user_FK_owner_id", "Springs_OwnerId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Spring>("WProject.BusinessLibrary.spring_user_FK_owner_id", "Springs_OwnerId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Tasks_AssignedTo in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_user_FK_assigned_to", "Tasks_AssignedTo")]
        public EntityCollection<Task> Tasks_AssignedTo
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Task>("WProject.BusinessLibrary.task_user_FK_assigned_to", "Tasks_AssignedTo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Task>("WProject.BusinessLibrary.task_user_FK_assigned_to", "Tasks_AssignedTo", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Tasks_CreatedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_user_FK_created_by", "Tasks_CreatedBy")]
        public EntityCollection<Task> Tasks_CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Task>("WProject.BusinessLibrary.task_user_FK_created_by", "Tasks_CreatedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Task>("WProject.BusinessLibrary.task_user_FK_created_by", "Tasks_CreatedBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskAttachements in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_attachement_user_FK_attached_by", "TaskAttachements")]
        public EntityCollection<TaskAttachement> TaskAttachements
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskAttachement>("WProject.BusinessLibrary.task_attachement_user_FK_attached_by", "TaskAttachements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskAttachement>("WProject.BusinessLibrary.task_attachement_user_FK_attached_by", "TaskAttachements", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskDependencies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_dependency_users_FK_created_by", "TaskDependencies")]
        public EntityCollection<TaskDependency> TaskDependencies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_users_FK_created_by", "TaskDependencies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskDependency>("WProject.BusinessLibrary.task_dependency_users_FK_created_by", "TaskDependencies", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskHistories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_history_user_FK_updated_by", "TaskHistories")]
        public EntityCollection<TaskHistory> TaskHistories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskHistory>("WProject.BusinessLibrary.task_history_user_FK_updated_by", "TaskHistories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskHistory>("WProject.BusinessLibrary.task_history_user_FK_updated_by", "TaskHistories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TaskTags in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "task_tag_user_FK_created_by", "TaskTags")]
        public EntityCollection<TaskTag> TaskTags
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TaskTag>("WProject.BusinessLibrary.task_tag_user_FK_created_by", "TaskTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TaskTag>("WProject.BusinessLibrary.task_tag_user_FK_created_by", "TaskTags", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserInGroups_AddedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_added_by", "UserInGroups_AddedBy")]
        public EntityCollection<UserInGroup> UserInGroups_AddedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserInGroup>("WProject.BusinessLibrary.user_in_group_user_FK_added_by", "UserInGroups_AddedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserInGroup>("WProject.BusinessLibrary.user_in_group_user_FK_added_by", "UserInGroups_AddedBy", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserInGroups_UserId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_user_id", "UserInGroups_UserId")]
        public EntityCollection<UserInGroup> UserInGroups_UserId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserInGroup>("WProject.BusinessLibrary.user_in_group_user_FK_user_id", "UserInGroups_UserId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserInGroup>("WProject.BusinessLibrary.user_in_group_user_FK_user_id", "UserInGroups_UserId", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for WProject.BusinessLibrary.UserInGroup in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// UserId
    /// GroupId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="WProject.BusinessLibrary", Name="UserInGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInGroup : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserInGroup object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="groupId">Initial value of GroupId.</param>
        /// <param name="added">Initial value of Added.</param>
        public static UserInGroup CreateUserInGroup(int id, int userId, int groupId, global::System.DateTime added)
        {
            UserInGroup userInGroup = new UserInGroup();
            userInGroup.Id = id;
            userInGroup.UserId = userId;
            userInGroup.GroupId = groupId;
            userInGroup.Added = added;
            return userInGroup;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                int value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private int _UserId;
        partial void OnGetUserId(ref int value);
        partial void OnUserIdChanging(ref int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for GroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int GroupId
        {
            get
            {
                int value = _GroupId;
                OnGetGroupId(ref value);
                return value;
            }
            set
            {
                if (_GroupId != value)
                {
                  OnGroupIdChanging(ref value);
                  ReportPropertyChanging("GroupId");
                  _GroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GroupId");
                  OnGroupIdChanged();
              }
            }
        }
        private int _GroupId;
        partial void OnGetGroupId(ref int value);
        partial void OnGroupIdChanging(ref int value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// There are no comments for Added in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Added
        {
            get
            {
                global::System.DateTime value = _Added;
                OnGetAdded(ref value);
                return value;
            }
            set
            {
                if (_Added != value)
                {
                  OnAddedChanging(ref value);
                  ReportPropertyChanging("Added");
                  _Added = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Added");
                  OnAddedChanged();
              }
            }
        }
        private global::System.DateTime _Added;
        partial void OnGetAdded(ref global::System.DateTime value);
        partial void OnAddedChanging(ref global::System.DateTime value);
        partial void OnAddedChanged();
    
        /// <summary>
        /// There are no comments for AddedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> AddedBy
        {
            get
            {
                global::System.Nullable<int> value = _AddedBy;
                OnGetAddedBy(ref value);
                return value;
            }
            set
            {
                if (_AddedBy != value)
                {
                  OnAddedByChanging(ref value);
                  ReportPropertyChanging("AddedBy");
                  _AddedBy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AddedBy");
                  OnAddedByChanged();
              }
            }
        }
        private global::System.Nullable<int> _AddedBy;
        partial void OnGetAddedBy(ref global::System.Nullable<int> value);
        partial void OnAddedByChanging(ref global::System.Nullable<int> value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// There are no comments for Comments in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Comments
        {
            get
            {
                string value = _Comments;
                OnGetComments(ref value);
                return value;
            }
            set
            {
                if (_Comments != value)
                {
                  OnCommentsChanging(ref value);
                  ReportPropertyChanging("Comments");
                  _Comments = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Comments");
                  OnCommentsChanged();
              }
            }
        }
        private string _Comments;
        partial void OnGetComments(ref string value);
        partial void OnCommentsChanging(ref string value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// There are no comments for Metadata in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Metadata
        {
            get
            {
                string value = _Metadata;
                OnGetMetadata(ref value);
                return value;
            }
            set
            {
                if (_Metadata != value)
                {
                  OnMetadataChanging(ref value);
                  ReportPropertyChanging("Metadata");
                  _Metadata = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Metadata");
                  OnMetadataChanged();
              }
            }
        }
        private string _Metadata;
        partial void OnGetMetadata(ref string value);
        partial void OnMetadataChanging(ref string value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// There are no comments for Deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<sbyte> Deleted
        {
            get
            {
                global::System.Nullable<sbyte> value = _Deleted;
                OnGetDeleted(ref value);
                return value;
            }
            set
            {
                if (_Deleted != value)
                {
                  OnDeletedChanging(ref value);
                  ReportPropertyChanging("Deleted");
                  _Deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deleted");
                  OnDeletedChanged();
              }
            }
        }
        private global::System.Nullable<sbyte> _Deleted;
        partial void OnGetDeleted(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanging(ref global::System.Nullable<sbyte> value);
        partial void OnDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for User_AddedBy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_added_by", "User_AddedBy")]
        public User User_AddedBy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_added_by", "User_AddedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_added_by", "User_AddedBy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_AddedBy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_AddedByReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_added_by", "User_AddedBy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_added_by", "User_AddedBy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_added_by", "User_AddedBy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Group in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_group_id", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Group>("WProject.BusinessLibrary.user_in_group_user_FK_group_id", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Group>("WProject.BusinessLibrary.user_in_group_user_FK_group_id", "Group").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Group in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Group>("WProject.BusinessLibrary.user_in_group_user_FK_group_id", "Group");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Group>("WProject.BusinessLibrary.user_in_group_user_FK_group_id", "Group", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Group>("WProject.BusinessLibrary.user_in_group_user_FK_group_id", "Group").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WProject.BusinessLibrary", "user_in_group_user_FK_user_id", "User_UserId")]
        public User User_UserId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_user_id", "User_UserId").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_user_id", "User_UserId").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User_UserId in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_UserIdReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_user_id", "User_UserId");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_user_id", "User_UserId", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("WProject.BusinessLibrary.user_in_group_user_FK_user_id", "User_UserId").Value = null;
                }
            }
        }

        #endregion
    }

}
