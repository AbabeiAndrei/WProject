#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using WProject.DataAccess;

namespace WProject.DataAccess	
{
	[Table("access")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class Access : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private int _id;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_id")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.ComponentModel.DataAnnotations.Key()]
		public virtual int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if(this._id != value)
				{
					this.OnPropertyChanging("Id");
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		private int? _userId;
		[Column("user_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_userId")]
		public virtual int? UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if(this._userId != value)
				{
					this.OnPropertyChanging("UserId");
					this._userId = value;
					this.OnPropertyChanged("UserId");
				}
			}
		}
		
		private int? _groupId;
		[Column("group_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_groupId")]
		public virtual int? GroupId
		{
			get
			{
				return this._groupId;
			}
			set
			{
				if(this._groupId != value)
				{
					this.OnPropertyChanging("GroupId");
					this._groupId = value;
					this.OnPropertyChanged("GroupId");
				}
			}
		}
		
		private int _accessId;
		[Column("access_id", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_accessId")]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual int AccessId
		{
			get
			{
				return this._accessId;
			}
			set
			{
				if(this._accessId != value)
				{
					this.OnPropertyChanging("AccessId");
					this._accessId = value;
					this.OnPropertyChanged("AccessId");
				}
			}
		}
		
		private short? _read;
		[Column("read", OpenAccessType = OpenAccessType.Byte, IsNullable = true, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_read")]
		public virtual short? Read
		{
			get
			{
				return this._read;
			}
			set
			{
				if(this._read != value)
				{
					this.OnPropertyChanging("Read");
					this._read = value;
					this.OnPropertyChanged("Read");
				}
			}
		}
		
		private short? _add;
		[Column("add", OpenAccessType = OpenAccessType.Byte, IsNullable = true, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_add")]
		public virtual short? Add
		{
			get
			{
				return this._add;
			}
			set
			{
				if(this._add != value)
				{
					this.OnPropertyChanging("Add");
					this._add = value;
					this.OnPropertyChanged("Add");
				}
			}
		}
		
		private short? _edit;
		[Column("edit", OpenAccessType = OpenAccessType.Byte, IsNullable = true, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_edit")]
		public virtual short? Edit
		{
			get
			{
				return this._edit;
			}
			set
			{
				if(this._edit != value)
				{
					this.OnPropertyChanging("Edit");
					this._edit = value;
					this.OnPropertyChanged("Edit");
				}
			}
		}
		
		private short? _delete;
		[Column("delete", OpenAccessType = OpenAccessType.Byte, IsNullable = true, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_delete")]
		public virtual short? Delete
		{
			get
			{
				return this._delete;
			}
			set
			{
				if(this._delete != value)
				{
					this.OnPropertyChanging("Delete");
					this._delete = value;
					this.OnPropertyChanged("Delete");
				}
			}
		}
		
		private DateTime? _accessGrantedAt;
		[Column("access_granted_at", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_accessGrantedAt")]
		[System.ComponentModel.DataAnnotations.DataType(System.ComponentModel.DataAnnotations.DataType.DateTime)]
		public virtual DateTime? AccessGrantedAt
		{
			get
			{
				return this._accessGrantedAt;
			}
			set
			{
				if(this._accessGrantedAt != value)
				{
					this.OnPropertyChanging("AccessGrantedAt");
					this._accessGrantedAt = value;
					this.OnPropertyChanged("AccessGrantedAt");
				}
			}
		}
		
		private int? _accessGrantedById;
		[Column("access_granted_by", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_accessGrantedById")]
		public virtual int? AccessGrantedById
		{
			get
			{
				return this._accessGrantedById;
			}
			set
			{
				if(this._accessGrantedById != value)
				{
					this.OnPropertyChanging("AccessGrantedById");
					this._accessGrantedById = value;
					this.OnPropertyChanged("AccessGrantedById");
				}
			}
		}
		
		private int? _objectId;
		[Column("object_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_objectId")]
		public virtual int? ObjectId
		{
			get
			{
				return this._objectId;
			}
			set
			{
				if(this._objectId != value)
				{
					this.OnPropertyChanging("ObjectId");
					this._objectId = value;
					this.OnPropertyChanged("ObjectId");
				}
			}
		}
		
		private string _comment;
		[Column("comment", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_comment")]
		public virtual string Comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if(this._comment != value)
				{
					this.OnPropertyChanging("Comment");
					this._comment = value;
					this.OnPropertyChanged("Comment");
				}
			}
		}
		
		private string _metadata;
		[Column("metadata", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_metadata")]
		public virtual string Metadata
		{
			get
			{
				return this._metadata;
			}
			set
			{
				if(this._metadata != value)
				{
					this.OnPropertyChanging("Metadata");
					this._metadata = value;
					this.OnPropertyChanged("Metadata");
				}
			}
		}
		
		private short? _deleted;
		[Column("deleted", OpenAccessType = OpenAccessType.Byte, IsNullable = true, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_deleted")]
		public virtual short? Deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if(this._deleted != value)
				{
					this.OnPropertyChanging("Deleted");
					this._deleted = value;
					this.OnPropertyChanged("Deleted");
				}
			}
		}
		
		private AccessObject _accessObject;
		[ForeignKeyAssociation(ConstraintName = "access_object_access_FK_access_id", SharedFields = "AccessId", TargetFields = "Id")]
		[Storage("_accessObject")]
		public virtual AccessObject AccessObject
		{
			get
			{
				return this._accessObject;
			}
			set
			{
				if(this._accessObject != value)
				{
					this.OnPropertyChanging("AccessObject");
					this._accessObject = value;
					this.OnPropertyChanged("AccessObject");
				}
			}
		}
		
		private Group _group;
		[ForeignKeyAssociation(ConstraintName = "access_object_group_FK_group_id", SharedFields = "GroupId", TargetFields = "Id")]
		[Storage("_group")]
		public virtual Group Group
		{
			get
			{
				return this._group;
			}
			set
			{
				if(this._group != value)
				{
					this.OnPropertyChanging("Group");
					this._group = value;
					this.OnPropertyChanged("Group");
				}
			}
		}
		
		private User _user;
		[ForeignKeyAssociation(ConstraintName = "access_object_user_FK_access_granted_by", SharedFields = "AccessGrantedById", TargetFields = "Id")]
		[Storage("_user")]
		public virtual User AccessGrantedBy
		{
			get
			{
				return this._user;
			}
			set
			{
				if(this._user != value)
				{
					this.OnPropertyChanging("AccessGrantedBy");
					this._user = value;
					this.OnPropertyChanged("AccessGrantedBy");
				}
			}
		}
		
		private User _user1;
		[ForeignKeyAssociation(ConstraintName = "access_object_user_FK_user_id", SharedFields = "UserId", TargetFields = "Id")]
		[Storage("_user1")]
		public virtual User User
		{
			get
			{
				return this._user1;
			}
			set
			{
				if(this._user1 != value)
				{
					this.OnPropertyChanging("User");
					this._user1 = value;
					this.OnPropertyChanged("User");
				}
			}
		}
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
