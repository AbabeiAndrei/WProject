#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using WProject.DataAccess;

namespace WProject.DataAccess	
{
	[Table("dict_item")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class DictItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private int _id;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_id")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.ComponentModel.DataAnnotations.Key()]
		public virtual int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if(this._id != value)
				{
					this.OnPropertyChanging("Id");
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		private string _name;
		[Column("name", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 512, Scale = 0, SqlType = "nvarchar")]
		[Storage("_name")]
		[System.ComponentModel.DataAnnotations.StringLength(512)]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if(this._name != value)
				{
					this.OnPropertyChanging("Name");
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		private string _description;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_description")]
		public virtual string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if(this._description != value)
				{
					this.OnPropertyChanging("Description");
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		private string _type;
		[Column("type", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 128, Scale = 0, SqlType = "nvarchar")]
		[Storage("_type")]
		[System.ComponentModel.DataAnnotations.StringLength(128)]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual string Type
		{
			get
			{
				return this._type;
			}
			set
			{
				if(this._type != value)
				{
					this.OnPropertyChanging("Type");
					this._type = value;
					this.OnPropertyChanged("Type");
				}
			}
		}
		
		private int? _parentId;
		[Column("parent_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_parentId")]
		public virtual int? ParentId
		{
			get
			{
				return this._parentId;
			}
			set
			{
				if(this._parentId != value)
				{
					this.OnPropertyChanging("ParentId");
					this._parentId = value;
					this.OnPropertyChanged("ParentId");
				}
			}
		}
		
		private short? _reserved;
		[Column("reserved", OpenAccessType = OpenAccessType.Byte, IsNullable = true, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_reserved")]
		public virtual short? Reserved
		{
			get
			{
				return this._reserved;
			}
			set
			{
				if(this._reserved != value)
				{
					this.OnPropertyChanging("Reserved");
					this._reserved = value;
					this.OnPropertyChanged("Reserved");
				}
			}
		}
		
		private string _code;
		[Column("code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 64, Scale = 0, SqlType = "nvarchar")]
		[Storage("_code")]
		[System.ComponentModel.DataAnnotations.StringLength(64)]
		public virtual string Code
		{
			get
			{
				return this._code;
			}
			set
			{
				if(this._code != value)
				{
					this.OnPropertyChanging("Code");
					this._code = value;
					this.OnPropertyChanged("Code");
				}
			}
		}
		
		private int? _order;
		[Column("order", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_order")]
		public virtual int? Order
		{
			get
			{
				return this._order;
			}
			set
			{
				if(this._order != value)
				{
					this.OnPropertyChanging("Order");
					this._order = value;
					this.OnPropertyChanged("Order");
				}
			}
		}
		
		private string _color;
		[Column("color", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 16, Scale = 0, SqlType = "nvarchar")]
		[Storage("_color")]
		[System.ComponentModel.DataAnnotations.StringLength(16)]
		public virtual string Color
		{
			get
			{
				return this._color;
			}
			set
			{
				if(this._color != value)
				{
					this.OnPropertyChanging("Color");
					this._color = value;
					this.OnPropertyChanged("Color");
				}
			}
		}
		
		private string _tag;
		[Column("tag", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_tag")]
		public virtual string Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if(this._tag != value)
				{
					this.OnPropertyChanging("Tag");
					this._tag = value;
					this.OnPropertyChanged("Tag");
				}
			}
		}
		
		private short? _deleted;
		[Column("deleted", OpenAccessType = OpenAccessType.Byte, IsNullable = true, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_deleted")]
		public virtual short? Deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if(this._deleted != value)
				{
					this.OnPropertyChanging("Deleted");
					this._deleted = value;
					this.OnPropertyChanged("Deleted");
				}
			}
		}
		
		private DictItem _dictItem1;
		[ForeignKeyAssociation(ConstraintName = "dict_item _dict_item_FK_parent_id", SharedFields = "ParentId", TargetFields = "Id")]
		[Storage("_dictItem1")]
		public virtual DictItem Parent
		{
			get
			{
				return this._dictItem1;
			}
			set
			{
				if(this._dictItem1 != value)
				{
					this.OnPropertyChanging("Parent");
					this._dictItem1 = value;
					this.OnPropertyChanged("Parent");
				}
			}
		}
		
		private IList<TaskDependency> _taskDependencies = new List<TaskDependency>();
		[Collection(InverseProperty = "BlockOnStage")]
		[Storage("_taskDependencies")]
		public virtual IList<TaskDependency> TaskDependencies
		{
			get
			{
				return this._taskDependencies;
			}
		}
		
		private IList<TaskDependency> _taskDependencies1 = new List<TaskDependency>();
		[Collection(InverseProperty = "BlockOnState")]
		[Storage("_taskDependencies1")]
		public virtual IList<TaskDependency> TaskDependencies1
		{
			get
			{
				return this._taskDependencies1;
			}
		}
		
		private IList<TaskDependency> _taskDependencies2 = new List<TaskDependency>();
		[Collection(InverseProperty = "DependentStage")]
		[Storage("_taskDependencies2")]
		public virtual IList<TaskDependency> TaskDependencies2
		{
			get
			{
				return this._taskDependencies2;
			}
		}
		
		private IList<TaskDependency> _taskDependencies3 = new List<TaskDependency>();
		[Collection(InverseProperty = "DependentState")]
		[Storage("_taskDependencies3")]
		public virtual IList<TaskDependency> TaskDependencies3
		{
			get
			{
				return this._taskDependencies3;
			}
		}
		
		private IList<Task> _tasks = new List<Task>();
		[Collection(InverseProperty = "Stage")]
		[Storage("_tasks")]
		public virtual IList<Task> Tasks
		{
			get
			{
				return this._tasks;
			}
		}
		
		private IList<Task> _tasks1 = new List<Task>();
		[Collection(InverseProperty = "State")]
		[Storage("_tasks1")]
		public virtual IList<Task> Tasks1
		{
			get
			{
				return this._tasks1;
			}
		}
		
		private IList<Task> _tasks2 = new List<Task>();
		[Collection(InverseProperty = "Type")]
		[Storage("_tasks2")]
		public virtual IList<Task> Tasks2
		{
			get
			{
				return this._tasks2;
			}
		}
		
		private IList<DictItem> _dictItems = new List<DictItem>();
		[Collection(InverseProperty = "Parent")]
		[Storage("_dictItems")]
		public virtual IList<DictItem> Childs
		{
			get
			{
				return this._dictItems;
			}
		}
		
		private IList<Backlog> _backlogs = new List<Backlog>();
		[Collection(InverseProperty = "Stage")]
		[Storage("_backlogs")]
		public virtual IList<Backlog> Backlogs
		{
			get
			{
				return this._backlogs;
			}
		}
		
		private IList<Backlog> _backlogs1 = new List<Backlog>();
		[Collection(InverseProperty = "Type")]
		[Storage("_backlogs1")]
		public virtual IList<Backlog> Backlogs1
		{
			get
			{
				return this._backlogs1;
			}
		}
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
