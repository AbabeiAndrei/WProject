#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using WProject.DataAccess;

namespace WProject.DataAccess	
{
	[Table("file")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private int _id;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_id")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.ComponentModel.DataAnnotations.Key()]
		public virtual int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if(this._id != value)
				{
					this.OnPropertyChanging("Id");
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		private string _name;
		[Column("name", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 1024, Scale = 0, SqlType = "nvarchar")]
		[Storage("_name")]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if(this._name != value)
				{
					this.OnPropertyChanging("Name");
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		private string _type;
		[Column("type", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 128, Scale = 0, SqlType = "nvarchar")]
		[Storage("_type")]
		[System.ComponentModel.DataAnnotations.StringLength(128)]
		public virtual string Type
		{
			get
			{
				return this._type;
			}
			set
			{
				if(this._type != value)
				{
					this.OnPropertyChanging("Type");
					this._type = value;
					this.OnPropertyChanged("Type");
				}
			}
		}
		
		private byte[] _content;
		[Column("content", OpenAccessType = OpenAccessType.LongVarBinary, IsNullable = true, Length = 0, Scale = 0, SqlType = "longblob")]
		[Storage("_content")]
		public virtual byte[] Content
		{
			get
			{
				return this._content;
			}
			set
			{
				if(this._content != value)
				{
					this.OnPropertyChanging("Content");
					this._content = value;
					this.OnPropertyChanged("Content");
				}
			}
		}
		
		private byte[] _thumbnail;
		[Column("thumbnail", OpenAccessType = OpenAccessType.LongVarBinary, IsNullable = true, Length = 0, Scale = 0, SqlType = "longblob")]
		[Storage("_thumbnail")]
		public virtual byte[] Thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if(this._thumbnail != value)
				{
					this.OnPropertyChanging("Thumbnail");
					this._thumbnail = value;
					this.OnPropertyChanged("Thumbnail");
				}
			}
		}
		
		private long? _size;
		[Column("size", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_size")]
		public virtual long? Size
		{
			get
			{
				return this._size;
			}
			set
			{
				if(this._size != value)
				{
					this.OnPropertyChanging("Size");
					this._size = value;
					this.OnPropertyChanged("Size");
				}
			}
		}
		
		private string _parentType;
		[Column("parent_type", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 128, Scale = 0, SqlType = "nvarchar")]
		[Storage("_parentType")]
		[System.ComponentModel.DataAnnotations.StringLength(128)]
		public virtual string ParentType
		{
			get
			{
				return this._parentType;
			}
			set
			{
				if(this._parentType != value)
				{
					this.OnPropertyChanging("ParentType");
					this._parentType = value;
					this.OnPropertyChanged("ParentType");
				}
			}
		}
		
		private int? _parentId;
		[Column("parent_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_parentId")]
		public virtual int? ParentId
		{
			get
			{
				return this._parentId;
			}
			set
			{
				if(this._parentId != value)
				{
					this.OnPropertyChanging("ParentId");
					this._parentId = value;
					this.OnPropertyChanged("ParentId");
				}
			}
		}
		
		private string _metadata;
		[Column("metadata", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_metadata")]
		public virtual string Metadata
		{
			get
			{
				return this._metadata;
			}
			set
			{
				if(this._metadata != value)
				{
					this.OnPropertyChanging("Metadata");
					this._metadata = value;
					this.OnPropertyChanged("Metadata");
				}
			}
		}
		
		private string _path;
		[Column("path", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "mediumtext")]
		[Storage("_path")]
		public virtual string Path
		{
			get
			{
				return this._path;
			}
			set
			{
				if(this._path != value)
				{
					this.OnPropertyChanging("Path");
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		private string _url;
		[Column("url", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "mediumtext")]
		[Storage("_url")]
		public virtual string Url
		{
			get
			{
				return this._url;
			}
			set
			{
				if(this._url != value)
				{
					this.OnPropertyChanging("Url");
					this._url = value;
					this.OnPropertyChanged("Url");
				}
			}
		}
		
		private DateTime? _createdAt;
		[Column("created_at", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_createdAt")]
		[System.ComponentModel.DataAnnotations.DataType(System.ComponentModel.DataAnnotations.DataType.DateTime)]
		public virtual DateTime? CreatedAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if(this._createdAt != value)
				{
					this.OnPropertyChanging("CreatedAt");
					this._createdAt = value;
					this.OnPropertyChanged("CreatedAt");
				}
			}
		}
		
		private int? _createdBy;
		[Column("created_by", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_createdBy")]
		public virtual int? CreatedBy
		{
			get
			{
				return this._createdBy;
			}
			set
			{
				if(this._createdBy != value)
				{
					this.OnPropertyChanging("CreatedBy");
					this._createdBy = value;
					this.OnPropertyChanged("CreatedBy");
				}
			}
		}
		
		private User _user;
		[ForeignKeyAssociation(ConstraintName = "file_user_FK_created_by", SharedFields = "CreatedBy", TargetFields = "Id")]
		[Storage("_user")]
		public virtual User User
		{
			get
			{
				return this._user;
			}
			set
			{
				if(this._user != value)
				{
					this.OnPropertyChanging("User");
					this._user = value;
					this.OnPropertyChanged("User");
				}
			}
		}
		
		private IList<TaskAttachement> _taskAttachements = new List<TaskAttachement>();
		[Collection(InverseProperty = "File")]
		[Storage("_taskAttachements")]
		public virtual IList<TaskAttachement> TaskAttachements
		{
			get
			{
				return this._taskAttachements;
			}
		}
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
